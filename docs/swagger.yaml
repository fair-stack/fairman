definitions:
  docker.Build:
    properties:
      args:
        additionalProperties: true
        description: DockerfileDefined inARGDefined in
        type: object
      cacheFrom:
        description: (v3.2+) Cached Mirror List
        items:
          $ref: '#/definitions/docker.Image'
        type: array
      context:
        description: A containingDockerfileA containing，A containingGitA containingURL
        type: string
      dockerfile:
        description: AlternativeDockerfile
        type: string
      labels:
        additionalProperties: true
        description: (v3.3+) The metadata information of the target image
        type: object
      shmSize:
        description: (v3.5+) Building mirrored/dev/shmBuilding mirrored，Building mirrored，Building mirrored
      target:
        description: (v3.4+) structureDockerfilestructureStage
        type: string
    type: object
  docker.Deploy:
    properties:
      endpointMode:
        description: endpoint_mode EndPoint Model  EndPoint Model ，EndPoint Model  vip EndPoint Model  dnsrr
        type: string
      labels:
        description: labels Service Tag
        items:
          type: string
        type: array
      maxReplicasPerNode:
        description: max_replicas_per_node Service deployment strategy Service deployment strategy，Service deployment strategy max_replicas_per_node
          or max_replicas_per_node
        type: integer
      mode:
        description: mode Service mode Service mode，Service mode replicated Service mode global
        type: string
      placement:
        description: placement Service deployment strategy Service deployment strategy，Service deployment strategy max_replicas_per_node Service deployment strategy max_replicas_per_node
        items:
          additionalProperties:
            type: string
          type: object
        type: array
      replicas:
        description: replicas Number of service replicas Number of service replicas，Number of service replicas 0 Number of service replicas 1 000 000 000
        type: integer
      resources:
        allOf:
        - $ref: '#/definitions/docker.Resources'
        description: resources Service resource allocation Service resource allocation
      restartPolicy:
        allOf:
        - $ref: '#/definitions/docker.RestartPolicy'
        description: restart_policy Service restart strategy Service restart strategy
      rollbackConfig:
        allOf:
        - $ref: '#/definitions/docker.RollbackConfig'
        description: rollback_config Service Rollback Configuration Service Rollback Configuration
      updateConfig:
        allOf:
        - $ref: '#/definitions/docker.UpdateConfig'
        description: update_config Service Update Configuration Service Update Configuration
    type: object
  docker.DocEndpoint:
    properties:
      TLSConfig:
        allOf:
        - $ref: '#/definitions/docker.TLSConfiguration'
        description: TLSConfig TLS allocation
      connected:
        description: Connection status
        type: boolean
      createAt:
        type: string
      envURL:
        description: URL or IP Related to this environment（Related to this environment）Related
          to this environmentDockerRelated to this environmentURLRelated to this environmentIPRelated
          to this environment
        type: string
      id:
        description: Default parameters _id Default parameters
        type: string
      isSocket:
        description: Whether to useSocket
        type: boolean
      isTLS:
        description: Whether to useTLS
        type: boolean
      k8sConfig:
        description: K8sConfig Kubernetes allocation
        type: string
      name:
        description: Environment(Endpoint) name
        type: string
      password:
        description: Server password
        type: string
      securitySettings:
        allOf:
        - $ref: '#/definitions/docker.EndpointSecuritySettings'
        description: Environment(Endpoint) Specific security settings
      status:
        description: Environmental status（Environmental status）(1 - up, 2 - down)
        example: 1
        type: integer
      templates:
        description: All templates // All templates All templates
        items:
          $ref: '#/definitions/docker.DocTemplate'
        type: array
      type:
        description: Environment(Endpoint) 1. remotedocker api
        type: integer
      uniqueId:
        description: Server Unique Identification
        type: string
      updateAt:
        type: string
      userId:
        description: userID
        type: string
      username:
        description: Server username
        type: string
    type: object
  docker.DocRegistry:
    properties:
      AccessToken:
        description: Store temporary access token(Store temporary access token)
        type: string
      AccessTokenExpiry:
        type: integer
      authentication:
        description: Authentication Whether to enable authentication
        type: boolean
      baseURL:
        description: BaseURL in order toProGetin order to
        type: string
      createAt:
        type: string
      gitlab:
        allOf:
        - $ref: '#/definitions/docker.GitlabRegistryData'
        description: Additional fields for other warehouse types need to be stored
          in the middle(Additional fields for other warehouse types need to be stored
          in the middle，Additional fields for other warehouse types need to be stored
          in the middle3，6Additional fields for other warehouse types need to be stored
          in the middle)
      id:
        description: Default parameters _id Default parameters
        type: string
      name:
        description: Name Warehouse alias Warehouse alias
        type: string
      password:
        description: Password password
        type: string
      registryType:
        description: "Type Warehouse type\nRegistry Type. Valid values are:\n\t1 (Quay.io),
          // Not yet developed quay.io Not yet developed\n\t2 (Azure container registry),
          // Not yet developed\n\t3 (custom registry), // Self built warehouse, Self
          built warehouse\n\t4 (Gitlab registry), // Not yet developed gitlab Not
          yet developed\n\t5 (ProGet registry), // Prepare for development\n\t6 (DockerHub)
          // docker hub\n\t7 (ECR) // Not yet developed aws ECR Not yet developed"
        enum:
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
        - 7
        type: integer
      updateAt:
        type: string
      url:
        description: URL or IP Warehouse address Warehouse address Warehouse address
        type: string
      userId:
        description: Userid Reserved Usersid，Reserved Users
        type: string
      username:
        description: Username user name
        type: string
    type: object
  docker.DocSoftware:
    properties:
      createAt:
        type: string
      dockerYml:
        $ref: '#/definitions/docker.Yml'
      endpoint:
        allOf:
        - $ref: '#/definitions/docker.DocEndpoint'
        description: environment
      entryPoint:
        type: string
      env:
        items:
          $ref: '#/definitions/docker.Pair'
        type: array
      homeHost:
        description: Home page address
        type: string
      homePort:
        description: Homepage Port
        type: string
      id:
        description: Default parameters _id Default parameters
        type: string
      name:
        description: The name of the software installation
        type: string
      projectPath:
        description: The following are all temporary configurations
        type: string
      status:
        description: running state
        type: string
      template:
        allOf:
        - $ref: '#/definitions/docker.DocTemplate'
        description: Template
      updateAt:
        type: string
      userId:
        description: userID
        type: string
      userIp:
        description: userIP
        type: string
      userIp2Region:
        description: userIP2REGIN
        type: string
    type: object
  docker.DocTemplate:
    properties:
      category:
        description: Template classification
        items:
          type: string
        type: array
      config:
        allOf:
        - $ref: '#/definitions/docker.DocTemplateConfig'
        description: configuration information configuration information
      copyright:
        description: Copyright Notice
        type: string
      createAt:
        type: string
      devLanguage:
        description: development language
        items:
          type: string
        type: array
      downloads:
        description: Number of downloads
        type: integer
      features:
        description: Template Properties
        type: string
      id:
        description: Default parameters _id Default parameters
        type: string
      isDel:
        description: Delete or not
        type: boolean
      logo:
        description: softwarelogo softwarehttpsoftware
        type: string
      name:
        description: Software Name
        type: string
      nameZh:
        description: Software name in Chinese
        type: string
      notice:
        allOf:
        - $ref: '#/definitions/docker.Notice'
        description: Message notification
      poster:
        description: poster
        items:
          $ref: '#/definitions/system.SysBaseFiles'
        type: array
      preview:
        description: preview
        items:
          $ref: '#/definitions/system.SysBaseFiles'
        type: array
      relationSoft:
        description: Related software
        items:
          $ref: '#/definitions/docker.DocTemplate'
        type: array
      relationSoftIds:
        description: Related software Related software
        items:
          type: string
        type: array
      score:
        description: Average score
        type: number
      state:
        description: Software status 1. Software status 2. Software status 3. Software
          status 4. Software status
        type: integer
      supportMode:
        allOf:
        - $ref: '#/definitions/docker.Mode'
        description: Software supported modes
      sysLanguage:
        description: System Language
        items:
          type: string
        type: array
      team:
        description: the development team
        type: string
      teamIcon:
        description: the development teamIcon
        type: string
      updateAt:
        type: string
      userId:
        description: userID
        type: string
    required:
    - logo
    - name
    type: object
  docker.DocTemplateConfig:
    properties:
      createAt:
        type: string
      dockerConfig:
        additionalProperties:
          $ref: '#/definitions/docker.TemplateConfig'
        description: Dockerconfiguration information configuration informationdefault
        type: object
      dockerImage:
        description: DockerImage image
        type: string
      dockerRegistry:
        allOf:
        - $ref: '#/definitions/docker.DocRegistry'
        description: warehouseID
      fileSize:
        description: Software size
        type: number
      id:
        description: Default parameters _id Default parameters
        type: string
      isDel:
        description: Delete or not
        type: boolean
      k8SConfig:
        allOf:
        - $ref: '#/definitions/docker.KubernetesConfig'
        description: Swarmreplace content replace content
      k8SContent:
        description: SwarmFile Content
        type: string
      k8SRegistry:
        description: SwarmwarehouseID
        items:
          $ref: '#/definitions/docker.DocRegistry'
        type: array
      manual:
        allOf:
        - $ref: '#/definitions/system.SysBaseFiles'
        description: User Manual
      platform:
        description: (Reserved)Reserved
        type: integer
      swarmConfig:
        additionalProperties:
          $ref: '#/definitions/docker.TemplateConfig'
        description: Swarmreplace content replace content
        type: object
      swarmContent:
        description: SwarmFile Content
        type: string
      swarmRegistry:
        description: SwarmwarehouseID
        items:
          $ref: '#/definitions/docker.DocRegistry'
        type: array
      templateId:
        description: TemplateID
        type: string
      updateAt:
        type: string
      userId:
        description: userID
        type: string
      version:
        description: Version number
        type: string
      versionContent:
        description: Version Content
        type: string
    type: object
  docker.EndpointSecuritySettings:
    properties:
      allowBindMountsForRegularUsers:
        description: |-
          Whether non-administrator should be able to use bind mounts when creating containers
          Should non administrators be able to use binding mount when creating containers
        example: false
        type: boolean
      allowContainerCapabilitiesForRegularUsers:
        description: |-
          Whether non-administrator should be able to use container capabilities
          Should non administrators be able to use container functionality
        example: true
        type: boolean
      allowDeviceMappingForRegularUsers:
        description: |-
          Whether non-administrator should be able to use device mapping
          Should non administrators be able to use device mapping
        example: true
        type: boolean
      allowHostNamespaceForRegularUsers:
        description: |-
          Whether non-administrator should be able to use the host pid
          Should non administrators be able to use the hostpid
        example: true
        type: boolean
      allowPrivilegedModeForRegularUsers:
        description: |-
          Whether non-administrator should be able to use privileged mode when creating containers
          Should non administrators be able to use privileged mode when creating containers
        example: false
        type: boolean
      allowStackManagementForRegularUsers:
        description: |-
          Whether non-administrator should be able to manage stacks
          Should non administrators be able to manage the stack
        example: true
        type: boolean
      allowSysctlSettingForRegularUsers:
        description: |-
          Whether non-administrator should be able to use sysctl settings
          Should non administrators be able to usesysctlShould non administrators be able to use
        example: true
        type: boolean
      allowVolumeBrowserForRegularUsers:
        description: |-
          Whether non-administrator should be able to browse volumes
          Should non administrators be able to browse volumes
        example: true
        type: boolean
      enableHostManagementFeatures:
        description: |-
          Whether host management features are enabled
          Enable host management function
        example: true
        type: boolean
    type: object
  docker.Environment:
    properties:
      desc:
        type: string
      key:
        type: string
      val:
        type: string
    type: object
  docker.GitlabRegistryData:
    properties:
      instanceURL:
        type: string
      projectID:
        type: integer
      projectPath:
        type: string
    type: object
  docker.Image:
    properties:
      name:
        description: Mirror Name
        type: string
      tag:
        description: Mirror label
        type: string
    type: object
  docker.KubernetesConfig:
    properties:
      deployment:
        $ref: '#/definitions/v1.Deployment'
      persistentVolumeClaim:
        $ref: '#/definitions/v1.PersistentVolumeClaim'
      service:
        $ref: '#/definitions/v1.Service'
    type: object
  docker.Mode:
    properties:
      docker:
        description: Dockermode
        type: boolean
      swarm:
        description: Swarmmode
        type: boolean
    type: object
  docker.Network:
    properties:
      external:
        description: |-
          TODO driver
          TODO driver_opts
          TODO attachable
          TODO enable_ipv6
          TODO ipam
          TODO internal
          TODO labels
        type: boolean
    type: object
  docker.NetworkMap:
    properties:
      aliases:
        description: Alias List
        items:
          type: string
        type: array
      ipv4Address:
        description: ipv4address
        type: string
      ipv6Address:
        description: ipv6address
        type: string
    type: object
  docker.Notice:
    properties:
      host:
        description: ip/domain name
        type: string
      method:
        description: Request Type Request TypeGET、POST
        type: string
      query:
        description: parameter parameter version/details
        items:
          type: string
        type: array
      uri:
        description: route
        type: string
    type: object
  docker.Pair:
    properties:
      name:
        example: name
        type: string
      value:
        example: value
        type: string
    type: object
  docker.Port:
    properties:
      desc:
        description: describe
        type: string
      mode:
        type: string
      protocol:
        type: string
      published:
        type: string
      target:
        type: string
    type: object
  docker.Resources:
    properties:
      cpus:
        description: cpus service CPU service service CPU service，service 0.000 service 1 000.000
        type: string
      memory:
        description: memory Service Memory Configuration Service Memory Configuration，Service Memory Configuration 4M Service Memory Configuration 1 000G
        type: string
    type: object
  docker.RestartPolicy:
    properties:
      condition:
        description: condition Service restart conditions Service restart conditions，Service restart conditions none、on-failure、any
        type: string
    type: object
  docker.RollbackConfig:
    properties:
      delay:
        description: delay Service Rollback Delay Service Rollback Delay，Service Rollback Delay 0 Service Rollback Delay 1 000 000 000
        type: integer
      failureAction:
        description: failure_action Service rollback failure behavior Service rollback failure behavior，Service rollback failure behavior pause、continue
        type: string
      maxFailureRatio:
        description: max_failure_ratio Service rollback failure rate Service rollback failure rate，Service rollback failure rate 0.000 Service rollback failure rate 1.000
        type: number
      monitor:
        description: monitor Service Rollback Monitoring Service Rollback Monitoring，Service Rollback Monitoring 0 Service Rollback Monitoring 1 000 000 000
        type: integer
      order:
        description: order Service Rollback Order Service Rollback Order，Service Rollback Order start-first、stop-first
        type: string
      parallelism:
        description: parallelism Number of service rollback parallels Number of service rollback parallels，Number of service rollback parallels 0 Number of service rollback parallels 1 000 000 000
        type: integer
    type: object
  docker.Secret:
    properties:
      gid:
        description: fileGID
        type: string
      mode:
        description: file right
        type: string
      source:
        description: name
        type: string
      target:
        description: file name
        type: string
      uid:
        description: fileUID
        type: string
    type: object
  docker.Service:
    properties:
      build:
        allOf:
        - $ref: '#/definitions/docker.Build'
        description: Configuration items during construction
      capAdd:
        description: Added container functionality
        items:
          type: string
        type: array
      capDrop:
        description: Added container functionality
        items:
          type: string
        type: array
      cgroupParent:
        description: Optional Parent Control Group
        type: string
      command:
        description: Default Command
        items:
          type: string
        type: array
      containerName:
        description: TODO configs
        type: string
      dependsOn:
        description: TODO credential_spec
        items:
          type: string
        type: array
      deploy:
        allOf:
        - $ref: '#/definitions/docker.Deploy'
        description: TODO deploy
      domainName:
        description: domain name
        type: string
      envFile:
        description: |-
          TODO devices
          TODO dns
          TODO dns_search
          TODO entrypoint
        items:
          type: string
        type: array
      environment:
        description: environment variable
        items:
          $ref: '#/definitions/docker.Environment'
        type: array
      hostName:
        description: host name
        type: string
      image:
        allOf:
        - $ref: '#/definitions/docker.Image'
        description: |-
          TODO expose
          TODO external_links
          TODO extra_hosts
          TODO healthcheck
      ipc:
        description: ipc
        type: string
      macAddress:
        description: macaddress
        type: string
      networkMode:
        description: |-
          TODO init
          TODO isolation
          TODO labels
          TODO links
          TODO logging
        type: string
      networks:
        additionalProperties:
          $ref: '#/definitions/docker.NetworkMap'
        description: Joined network
        type: object
      ports:
        description: TODO pid
        items:
          $ref: '#/definitions/docker.Port'
        type: array
      privileged:
        description: privilege
        type: boolean
      proflies:
        description: Service configuration file
        items:
          type: string
        type: array
      readOnly:
        description: read-only
        type: boolean
      restart:
        description: Restart strategy
        type: string
      secrets:
        description: secret key
        items:
          $ref: '#/definitions/docker.Secret'
        type: array
      shmSize:
        description: Shared Memory Size
        type: string
      stdinOpen:
        description: Standard input
        type: boolean
      tty:
        description: Is it enabledtty
        type: boolean
      user:
        description: Each of these is a single value, analogous to its docker run
          counterpart. Note that mac_address is a legacy option.
        type: string
      volumes:
        description: |-
          TODO security_opt
          TODO stop_grace_period
          TODO stop_signal
          TODO sysctls
          TODO tmpfs
          TODO ulimits
          TODO userns_mode
        items:
          $ref: '#/definitions/docker.VolumeMap'
        type: array
      workingDir:
        description: working directory
        type: string
    type: object
  docker.TLSConfiguration:
    properties:
      TLSCACertPath:
        description: TLS CAThe path to the certificate file // ca.pem
        type: string
      TLSCertPath:
        description: TLSThe path to the client certificate file // cert.pem
        type: string
      TLSKeyPath:
        description: TLSThe path to the client key file // key.pem
        type: string
      TLSType:
        description: TLSType TLStype
        example: 1
        type: integer
    type: object
  docker.TemplateConfig:
    properties:
      environment:
        items:
          $ref: '#/definitions/docker.Environment'
        type: array
      hostname:
        type: string
      ports:
        items:
          $ref: '#/definitions/docker.Port'
        type: array
      volume:
        items:
          $ref: '#/definitions/docker.VolumeMap'
        type: array
    type: object
  docker.UpdateConfig:
    properties:
      delay:
        description: delay Service update delay Service update delay，Service update delay 0 Service update delay 1 000 000 000
        type: integer
      failureAction:
        description: failure_action Service update failure behavior Service update failure behavior，Service update failure behavior continue、pause、rollback
        type: string
      maxFailureRatio:
        description: max_failure_ratio Service update failure rate Service update failure rate，Service update failure rate 0.000 Service update failure rate 1.000
        type: number
      monitor:
        description: monitor Service update monitoring Service update monitoring，Service update monitoring 0 Service update monitoring 1 000 000 000
        type: integer
      order:
        description: order Service update order Service update order，Service update order start-first、stop-first
        type: string
      parallelism:
        description: parallelism Service update parallelism Service update parallelism，Service update parallelism 0 Service update parallelism 1 000
        type: integer
    type: object
  docker.Volume:
    properties:
      external:
        description: |-
          TODO driver
          TODO driver_opts
        type: boolean
    type: object
  docker.VolumeMap:
    properties:
      desc:
        description: describe
        type: string
      readOnly:
        description: Read Only
        type: boolean
      source:
        description: Path to external host
        type: string
      target:
        description: Path to internal container
        type: string
      type:
        description: type bind, volume, tmpfs
        type: string
    type: object
  docker.Yml:
    properties:
      networks:
        additionalProperties:
          $ref: '#/definitions/docker.Network'
        description: network configuration
        type: object
      secrets:
        additionalProperties:
          $ref: '#/definitions/docker.YmlSecret'
        description: secret key
        type: object
      services:
        additionalProperties:
          $ref: '#/definitions/docker.Service'
        description: Service configuration
        type: object
      version:
        description: Version number
        type: string
      volumes:
        additionalProperties:
          $ref: '#/definitions/docker.Volume'
        description: Mount Volume Configuration
        type: object
    type: object
  docker.YmlSecret:
    properties:
      external:
        description: Does it already exist，Does it already exist。
        type: string
      file:
        description: File Path
        type: string
      name:
        description: (v3.5+) name
        type: string
    type: object
  intstr.IntOrString:
    properties:
      intVal:
        type: integer
      strVal:
        type: string
      type:
        $ref: '#/definitions/intstr.Type'
    type: object
  intstr.Type:
    enum:
    - 0
    - 1
    type: integer
    x-enum-comments:
      Int: The IntOrString holds an int.
      String: The IntOrString holds a string.
    x-enum-varnames:
    - Int
    - String
  k8s_io_api_core_v1.ConditionStatus:
    enum:
    - "True"
    - "False"
    - Unknown
    type: string
    x-enum-varnames:
    - ConditionTrue
    - ConditionFalse
    - ConditionUnknown
  k8s_io_apimachinery_pkg_apis_meta_v1.ConditionStatus:
    enum:
    - "True"
    - "False"
    - Unknown
    type: string
    x-enum-varnames:
    - ConditionTrue
    - ConditionFalse
    - ConditionUnknown
  request.DelSoftwareReq:
    properties:
      id:
        type: string
    type: object
  request.StartSoftwareRequest:
    properties:
      endpoint:
        $ref: '#/definitions/docker.DocEndpoint'
      endpointId:
        type: string
      name:
        type: string
      projectPath:
        type: string
    type: object
  request.StopSoftwareRequest:
    properties:
      endpoint:
        $ref: '#/definitions/docker.DocEndpoint'
      endpointId:
        type: string
      name:
        type: string
      projectPath:
        type: string
    type: object
  request.UpdateSoftwareRequest:
    properties:
      endpoint:
        $ref: '#/definitions/docker.DocEndpoint'
      endpointId:
        type: string
      kubernetesConfig:
        $ref: '#/definitions/docker.KubernetesConfig'
      name:
        type: string
      newConfig:
        additionalProperties:
          $ref: '#/definitions/docker.TemplateConfig'
        type: object
      newContent:
        type: string
      oldConfig:
        additionalProperties:
          $ref: '#/definitions/docker.TemplateConfig'
        type: object
      oldContent:
        type: string
    type: object
  resource.Quantity:
    properties:
      Format:
        enum:
        - DecimalExponent
        - BinarySI
        - DecimalSI
        type: string
        x-enum-comments:
          BinarySI: e.g., 12Mi (12 * 2^20)
          DecimalExponent: e.g., 12e6
          DecimalSI: e.g., 12M  (12 * 10^6)
        x-enum-varnames:
        - DecimalExponent
        - BinarySI
        - DecimalSI
    type: object
  response.Response:
    properties:
      code:
        type: integer
      data: {}
      message:
        type: string
    type: object
  system.SysBaseFiles:
    properties:
      createAt:
        type: string
      id:
        description: Default parameters _id Default parameters
        type: string
      name:
        description: file name
        type: string
      originalName:
        description: original file name
        type: string
      size:
        description: file size
        type: integer
      suffix:
        description: file extension
        type: string
      updateAt:
        type: string
      url:
        description: url address
        type: string
    type: object
  v1.AWSElasticBlockStoreVolumeSource:
    properties:
      fsType:
        description: |-
          Filesystem type of the volume that you want to mount.
          Tip: Ensure that the filesystem type is supported by the host operating system.
          Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
          More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
          TODO: how do we prevent errors in the filesystem from compromising the machine
          +optional
        type: string
      partition:
        description: |-
          The partition in the volume that you want to mount.
          If omitted, the default is to mount by volume name.
          Examples: For volume /dev/sda1, you specify the partition as "1".
          Similarly, the volume partition for /dev/sda is "0" (or you can leave the property empty).
          +optional
        type: integer
      readOnly:
        description: |-
          Specify "true" to force and set the ReadOnly property in VolumeMounts to "true".
          If omitted, the default is "false".
          More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
          +optional
        type: boolean
      volumeID:
        description: |-
          Unique ID of the persistent disk resource in AWS (Amazon EBS volume).
          More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
        type: string
    type: object
  v1.Affinity:
    properties:
      nodeAffinity:
        allOf:
        - $ref: '#/definitions/v1.NodeAffinity'
        description: |-
          Describes node affinity scheduling rules for the pod.
          +optional
      podAffinity:
        allOf:
        - $ref: '#/definitions/v1.PodAffinity'
        description: |-
          Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).
          +optional
      podAntiAffinity:
        allOf:
        - $ref: '#/definitions/v1.PodAntiAffinity'
        description: |-
          Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).
          +optional
    type: object
  v1.AzureDataDiskCachingMode:
    enum:
    - None
    - ReadOnly
    - ReadWrite
    type: string
    x-enum-varnames:
    - AzureDataDiskCachingNone
    - AzureDataDiskCachingReadOnly
    - AzureDataDiskCachingReadWrite
  v1.AzureDataDiskKind:
    enum:
    - Shared
    - Dedicated
    - Managed
    type: string
    x-enum-varnames:
    - AzureSharedBlobDisk
    - AzureDedicatedBlobDisk
    - AzureManagedDisk
  v1.AzureDiskVolumeSource:
    properties:
      cachingMode:
        allOf:
        - $ref: '#/definitions/v1.AzureDataDiskCachingMode'
        description: |-
          Host Caching mode: None, Read Only, Read Write.
          +optional
      diskName:
        description: The Name of the data disk in the blob storage
        type: string
      diskURI:
        description: The URI the data disk in the blob storage
        type: string
      fsType:
        description: |-
          Filesystem type to mount.
          Must be a filesystem type supported by the host operating system.
          Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
          +optional
        type: string
      kind:
        allOf:
        - $ref: '#/definitions/v1.AzureDataDiskKind'
        description: 'Expected values Shared: multiple blob disks per storage account  Dedicated:
          single blob disk per storage account  Managed: azure managed data disk (only
          in managed availability set). defaults to shared'
      readOnly:
        description: |-
          Defaults to false (read/write). ReadOnly here will force
          the ReadOnly setting in VolumeMounts.
          +optional
        type: boolean
    type: object
  v1.AzureFileVolumeSource:
    properties:
      readOnly:
        description: |-
          Defaults to false (read/write). ReadOnly here will force
          the ReadOnly setting in VolumeMounts.
          +optional
        type: boolean
      secretName:
        description: the name of secret that contains Azure Storage Account Name and
          Key
        type: string
      shareName:
        description: Share Name
        type: string
    type: object
  v1.CSIVolumeSource:
    properties:
      driver:
        description: |-
          Driver is the name of the CSI driver that handles this volume.
          Consult with your admin for the correct name as registered in the cluster.
        type: string
      fsType:
        description: |-
          Filesystem type to mount. Ex. "ext4", "xfs", "ntfs".
          If not provided, the empty value is passed to the associated CSI driver
          which will determine the default filesystem to apply.
          +optional
        type: string
      nodePublishSecretRef:
        allOf:
        - $ref: '#/definitions/v1.LocalObjectReference'
        description: |-
          NodePublishSecretRef is a reference to the secret object containing
          sensitive information to pass to the CSI driver to complete the CSI
          NodePublishVolume and NodeUnpublishVolume calls.
          This field is optional, and  may be empty if no secret is required. If the
          secret object contains more than one secret, all secret references are passed.
          +optional
      readOnly:
        description: |-
          Specifies a read-only configuration for the volume.
          Defaults to false (read/write).
          +optional
        type: boolean
      volumeAttributes:
        additionalProperties:
          type: string
        description: |-
          VolumeAttributes stores driver-specific properties that are passed to the CSI
          driver. Consult your driver's documentation for supported values.
          +optional
        type: object
    type: object
  v1.Capabilities:
    properties:
      add:
        description: |-
          Added capabilities
          +optional
        items:
          type: string
        type: array
      drop:
        description: |-
          Removed capabilities
          +optional
        items:
          type: string
        type: array
    type: object
  v1.CephFSVolumeSource:
    properties:
      monitors:
        description: |-
          Required: Monitors is a collection of Ceph monitors
          More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
        items:
          type: string
        type: array
      path:
        description: |-
          Optional: Used as the mounted root, rather than the full Ceph tree, default is /
          +optional
        type: string
      readOnly:
        description: |-
          Optional: Defaults to false (read/write). ReadOnly here will force
          the ReadOnly setting in VolumeMounts.
          More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
          +optional
        type: boolean
      secretFile:
        description: |-
          Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret
          More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
          +optional
        type: string
      secretRef:
        allOf:
        - $ref: '#/definitions/v1.LocalObjectReference'
        description: |-
          Optional: SecretRef is reference to the authentication secret for User, default is empty.
          More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
          +optional
      user:
        description: |-
          Optional: User is the rados user name, default is admin
          More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
          +optional
        type: string
    type: object
  v1.CinderVolumeSource:
    properties:
      fsType:
        description: |-
          Filesystem type to mount.
          Must be a filesystem type supported by the host operating system.
          Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
          More info: https://examples.k8s.io/mysql-cinder-pd/README.md
          +optional
        type: string
      readOnly:
        description: |-
          Optional: Defaults to false (read/write). ReadOnly here will force
          the ReadOnly setting in VolumeMounts.
          More info: https://examples.k8s.io/mysql-cinder-pd/README.md
          +optional
        type: boolean
      secretRef:
        allOf:
        - $ref: '#/definitions/v1.LocalObjectReference'
        description: |-
          Optional: points to a secret object containing parameters used to connect
          to OpenStack.
          +optional
      volumeID:
        description: |-
          volume id used to identify the volume in cinder.
          More info: https://examples.k8s.io/mysql-cinder-pd/README.md
        type: string
    type: object
  v1.ClientIPConfig:
    properties:
      timeoutSeconds:
        description: |-
          timeoutSeconds specifies the seconds of ClientIP type session sticky time.
          The value must be >0 && <=86400(for 1 day) if ServiceAffinity == "ClientIP".
          Default value is 10800(for 3 hours).
          +optional
        type: integer
    type: object
  v1.Condition:
    properties:
      lastTransitionTime:
        description: |-
          lastTransitionTime is the last time the condition transitioned from one status to another.
          This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
          +required
          +kubebuilder:validation:Required
          +kubebuilder:validation:Type=string
          +kubebuilder:validation:Format=date-time
        type: string
      message:
        description: |-
          message is a human readable message indicating details about the transition.
          This may be an empty string.
          +required
          +kubebuilder:validation:Required
          +kubebuilder:validation:MaxLength=32768
        type: string
      observedGeneration:
        description: |-
          observedGeneration represents the .metadata.generation that the condition was set based upon.
          For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
          with respect to the current state of the instance.
          +optional
          +kubebuilder:validation:Minimum=0
        type: integer
      reason:
        description: |-
          reason contains a programmatic identifier indicating the reason for the condition's last transition.
          Producers of specific condition types may define expected values and meanings for this field,
          and whether the values are considered a guaranteed API.
          The value should be a CamelCase string.
          This field may not be empty.
          +required
          +kubebuilder:validation:Required
          +kubebuilder:validation:MaxLength=1024
          +kubebuilder:validation:MinLength=1
          +kubebuilder:validation:Pattern=`^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$`
        type: string
      status:
        allOf:
        - $ref: '#/definitions/k8s_io_apimachinery_pkg_apis_meta_v1.ConditionStatus'
        description: |-
          status of the condition, one of True, False, Unknown.
          +required
          +kubebuilder:validation:Required
          +kubebuilder:validation:Enum=True;False;Unknown
      type:
        description: |-
          type of condition in CamelCase or in foo.example.com/CamelCase.
          ---
          Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
          useful (see .node.status.conditions), the ability to deconflict is important.
          The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
          +required
          +kubebuilder:validation:Required
          +kubebuilder:validation:Pattern=`^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$`
          +kubebuilder:validation:MaxLength=316
        type: string
    type: object
  v1.ConfigMapEnvSource:
    properties:
      name:
        description: |-
          Name of the referent.
          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
          TODO: Add other useful fields. apiVersion, kind, uid?
          +optional
        type: string
      optional:
        description: |-
          Specify whether the ConfigMap must be defined
          +optional
        type: boolean
    type: object
  v1.ConfigMapKeySelector:
    properties:
      key:
        description: The key to select.
        type: string
      name:
        description: |-
          Name of the referent.
          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
          TODO: Add other useful fields. apiVersion, kind, uid?
          +optional
        type: string
      optional:
        description: |-
          Specify whether the ConfigMap or its key must be defined
          +optional
        type: boolean
    type: object
  v1.ConfigMapProjection:
    properties:
      items:
        description: |-
          If unspecified, each key-value pair in the Data field of the referenced
          ConfigMap will be projected into the volume as a file whose name is the
          key and content is the value. If specified, the listed keys will be
          projected into the specified paths, and unlisted keys will not be
          present. If a key is specified which is not present in the ConfigMap,
          the volume setup will error unless it is marked optional. Paths must be
          relative and may not contain the '..' path or start with '..'.
          +optional
        items:
          $ref: '#/definitions/v1.KeyToPath'
        type: array
      name:
        description: |-
          Name of the referent.
          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
          TODO: Add other useful fields. apiVersion, kind, uid?
          +optional
        type: string
      optional:
        description: |-
          Specify whether the ConfigMap or its keys must be defined
          +optional
        type: boolean
    type: object
  v1.ConfigMapVolumeSource:
    properties:
      defaultMode:
        description: |-
          Optional: mode bits used to set permissions on created files by default.
          Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
          YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
          Defaults to 0644.
          Directories within the path are not affected by this setting.
          This might be in conflict with other options that affect the file
          mode, like fsGroup, and the result can be other mode bits set.
          +optional
        type: integer
      items:
        description: |-
          If unspecified, each key-value pair in the Data field of the referenced
          ConfigMap will be projected into the volume as a file whose name is the
          key and content is the value. If specified, the listed keys will be
          projected into the specified paths, and unlisted keys will not be
          present. If a key is specified which is not present in the ConfigMap,
          the volume setup will error unless it is marked optional. Paths must be
          relative and may not contain the '..' path or start with '..'.
          +optional
        items:
          $ref: '#/definitions/v1.KeyToPath'
        type: array
      name:
        description: |-
          Name of the referent.
          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
          TODO: Add other useful fields. apiVersion, kind, uid?
          +optional
        type: string
      optional:
        description: |-
          Specify whether the ConfigMap or its keys must be defined
          +optional
        type: boolean
    type: object
  v1.Container:
    properties:
      args:
        description: |-
          Arguments to the entrypoint.
          The docker image's CMD is used if this is not provided.
          Variable references $(VAR_NAME) are expanded using the container's environment. If a variable
          cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced
          to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will
          produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless
          of whether the variable exists or not. Cannot be updated.
          More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
          +optional
        items:
          type: string
        type: array
      command:
        description: |-
          Entrypoint array. Not executed within a shell.
          The docker image's ENTRYPOINT is used if this is not provided.
          Variable references $(VAR_NAME) are expanded using the container's environment. If a variable
          cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced
          to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will
          produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless
          of whether the variable exists or not. Cannot be updated.
          More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
          +optional
        items:
          type: string
        type: array
      env:
        description: |-
          List of environment variables to set in the container.
          Cannot be updated.
          +optional
          +patchMergeKey=name
          +patchStrategy=merge
        items:
          $ref: '#/definitions/v1.EnvVar'
        type: array
      envFrom:
        description: |-
          List of sources to populate environment variables in the container.
          The keys defined within a source must be a C_IDENTIFIER. All invalid keys
          will be reported as an event when the container is starting. When a key exists in multiple
          sources, the value associated with the last source will take precedence.
          Values defined by an Env with a duplicate key will take precedence.
          Cannot be updated.
          +optional
        items:
          $ref: '#/definitions/v1.EnvFromSource'
        type: array
      image:
        description: |-
          Docker image name.
          More info: https://kubernetes.io/docs/concepts/containers/images
          This field is optional to allow higher level config management to default or override
          container images in workload controllers like Deployments and StatefulSets.
          +optional
        type: string
      imagePullPolicy:
        allOf:
        - $ref: '#/definitions/v1.PullPolicy'
        description: |-
          Image pull policy.
          One of Always, Never, IfNotPresent.
          Defaults to Always if :latest tag is specified, or IfNotPresent otherwise.
          Cannot be updated.
          More info: https://kubernetes.io/docs/concepts/containers/images#updating-images
          +optional
      lifecycle:
        allOf:
        - $ref: '#/definitions/v1.Lifecycle'
        description: |-
          Actions that the management system should take in response to container lifecycle events.
          Cannot be updated.
          +optional
      livenessProbe:
        allOf:
        - $ref: '#/definitions/v1.Probe'
        description: |-
          Periodic probe of container liveness.
          Container will be restarted if the probe fails.
          Cannot be updated.
          More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
          +optional
      name:
        description: |-
          Name of the container specified as a DNS_LABEL.
          Each container in a pod must have a unique name (DNS_LABEL).
          Cannot be updated.
        type: string
      ports:
        description: |-
          List of ports to expose from the container. Exposing a port here gives
          the system additional information about the network connections a
          container uses, but is primarily informational. Not specifying a port here
          DOES NOT prevent that port from being exposed. Any port which is
          listening on the default "0.0.0.0" address inside a container will be
          accessible from the network.
          Cannot be updated.
          +optional
          +patchMergeKey=containerPort
          +patchStrategy=merge
          +listType=map
          +listMapKey=containerPort
          +listMapKey=protocol
        items:
          $ref: '#/definitions/v1.ContainerPort'
        type: array
      readinessProbe:
        allOf:
        - $ref: '#/definitions/v1.Probe'
        description: |-
          Periodic probe of container service readiness.
          Container will be removed from service endpoints if the probe fails.
          Cannot be updated.
          More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
          +optional
      resources:
        allOf:
        - $ref: '#/definitions/v1.ResourceRequirements'
        description: |-
          Compute Resources required by this container.
          Cannot be updated.
          More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
          +optional
      securityContext:
        allOf:
        - $ref: '#/definitions/v1.SecurityContext'
        description: |-
          SecurityContext defines the security options the container should be run with.
          If set, the fields of SecurityContext override the equivalent fields of PodSecurityContext.
          More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
          +optional
      startupProbe:
        allOf:
        - $ref: '#/definitions/v1.Probe'
        description: |-
          StartupProbe indicates that the Pod has successfully initialized.
          If specified, no other probes are executed until this completes successfully.
          If this probe fails, the Pod will be restarted, just as if the livenessProbe failed.
          This can be used to provide different probe parameters at the beginning of a Pod's lifecycle,
          when it might take a long time to load data or warm a cache, than during steady-state operation.
          This cannot be updated.
          More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
          +optional
      stdin:
        description: |-
          Whether this container should allocate a buffer for stdin in the container runtime. If this
          is not set, reads from stdin in the container will always result in EOF.
          Default is false.
          +optional
        type: boolean
      stdinOnce:
        description: |-
          Whether the container runtime should close the stdin channel after it has been opened by
          a single attach. When stdin is true the stdin stream will remain open across multiple attach
          sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the
          first client attaches to stdin, and then remains open and accepts data until the client disconnects,
          at which time stdin is closed and remains closed until the container is restarted. If this
          flag is false, a container processes that reads from stdin will never receive an EOF.
          Default is false
          +optional
        type: boolean
      terminationMessagePath:
        description: |-
          Optional: Path at which the file to which the container's termination message
          will be written is mounted into the container's filesystem.
          Message written is intended to be brief final status, such as an assertion failure message.
          Will be truncated by the node if greater than 4096 bytes. The total message length across
          all containers will be limited to 12kb.
          Defaults to /dev/termination-log.
          Cannot be updated.
          +optional
        type: string
      terminationMessagePolicy:
        allOf:
        - $ref: '#/definitions/v1.TerminationMessagePolicy'
        description: |-
          Indicate how the termination message should be populated. File will use the contents of
          terminationMessagePath to populate the container status message on both success and failure.
          FallbackToLogsOnError will use the last chunk of container log output if the termination
          message file is empty and the container exited with an error.
          The log output is limited to 2048 bytes or 80 lines, whichever is smaller.
          Defaults to File.
          Cannot be updated.
          +optional
      tty:
        description: |-
          Whether this container should allocate a TTY for itself, also requires 'stdin' to be true.
          Default is false.
          +optional
        type: boolean
      volumeDevices:
        description: |-
          volumeDevices is the list of block devices to be used by the container.
          +patchMergeKey=devicePath
          +patchStrategy=merge
          +optional
        items:
          $ref: '#/definitions/v1.VolumeDevice'
        type: array
      volumeMounts:
        description: |-
          Pod volumes to mount into the container's filesystem.
          Cannot be updated.
          +optional
          +patchMergeKey=mountPath
          +patchStrategy=merge
        items:
          $ref: '#/definitions/v1.VolumeMount'
        type: array
      workingDir:
        description: |-
          Container's working directory.
          If not specified, the container runtime's default will be used, which
          might be configured in the container image.
          Cannot be updated.
          +optional
        type: string
    type: object
  v1.ContainerPort:
    properties:
      containerPort:
        description: |-
          Number of port to expose on the pod's IP address.
          This must be a valid port number, 0 < x < 65536.
        type: integer
      hostIP:
        description: |-
          What host IP to bind the external port to.
          +optional
        type: string
      hostPort:
        description: |-
          Number of port to expose on the host.
          If specified, this must be a valid port number, 0 < x < 65536.
          If HostNetwork is specified, this must match ContainerPort.
          Most containers do not need this.
          +optional
        type: integer
      name:
        description: |-
          If specified, this must be an IANA_SVC_NAME and unique within the pod. Each
          named port in a pod must have a unique name. Name for the port that can be
          referred to by services.
          +optional
        type: string
      protocol:
        allOf:
        - $ref: '#/definitions/v1.Protocol'
        description: |-
          Protocol for port. Must be UDP, TCP, or SCTP.
          Defaults to "TCP".
          +optional
          +default="TCP"
    type: object
  v1.DNSPolicy:
    enum:
    - ClusterFirstWithHostNet
    - ClusterFirst
    - Default
    - None
    type: string
    x-enum-varnames:
    - DNSClusterFirstWithHostNet
    - DNSClusterFirst
    - DNSDefault
    - DNSNone
  v1.Deployment:
    properties:
      apiVersion:
        description: |-
          APIVersion defines the versioned schema of this representation of an object.
          Servers should convert recognized schemas to the latest internal value, and
          may reject unrecognized values.
          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
          +optional
        type: string
      kind:
        description: |-
          Kind is a string value representing the REST resource this object represents.
          Servers may infer this from the endpoint the client submits requests to.
          Cannot be updated.
          In CamelCase.
          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
          +optional
        type: string
      metadata:
        allOf:
        - $ref: '#/definitions/v1.ObjectMeta'
        description: |-
          Standard object's metadata.
          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
          +optional
      spec:
        allOf:
        - $ref: '#/definitions/v1.DeploymentSpec'
        description: |-
          Specification of the desired behavior of the Deployment.
          +optional
      status:
        allOf:
        - $ref: '#/definitions/v1.DeploymentStatus'
        description: |-
          Most recently observed status of the Deployment.
          +optional
    type: object
  v1.DeploymentCondition:
    properties:
      lastTransitionTime:
        description: Last time the condition transitioned from one status to another.
        type: string
      lastUpdateTime:
        description: The last time this condition was updated.
        type: string
      message:
        description: A human readable message indicating details about the transition.
        type: string
      reason:
        description: The reason for the condition's last transition.
        type: string
      status:
        allOf:
        - $ref: '#/definitions/k8s_io_api_core_v1.ConditionStatus'
        description: Status of the condition, one of True, False, Unknown.
      type:
        allOf:
        - $ref: '#/definitions/v1.DeploymentConditionType'
        description: Type of deployment condition.
    type: object
  v1.DeploymentConditionType:
    enum:
    - Available
    - Progressing
    - ReplicaFailure
    type: string
    x-enum-varnames:
    - DeploymentAvailable
    - DeploymentProgressing
    - DeploymentReplicaFailure
  v1.DeploymentSpec:
    properties:
      minReadySeconds:
        description: |-
          Minimum number of seconds for which a newly created pod should be ready
          without any of its container crashing, for it to be considered available.
          Defaults to 0 (pod will be considered available as soon as it is ready)
          +optional
        type: integer
      paused:
        description: |-
          Indicates that the deployment is paused.
          +optional
        type: boolean
      progressDeadlineSeconds:
        description: |-
          The maximum time in seconds for a deployment to make progress before it
          is considered to be failed. The deployment controller will continue to
          process failed deployments and a condition with a ProgressDeadlineExceeded
          reason will be surfaced in the deployment status. Note that progress will
          not be estimated during the time a deployment is paused. Defaults to 600s.
        type: integer
      replicas:
        description: |-
          Number of desired pods. This is a pointer to distinguish between explicit
          zero and not specified. Defaults to 1.
          +optional
        type: integer
      revisionHistoryLimit:
        description: |-
          The number of old ReplicaSets to retain to allow rollback.
          This is a pointer to distinguish between explicit zero and not specified.
          Defaults to 10.
          +optional
        type: integer
      selector:
        allOf:
        - $ref: '#/definitions/v1.LabelSelector'
        description: |-
          Label selector for pods. Existing ReplicaSets whose pods are
          selected by this will be the ones affected by this deployment.
          It must match the pod template's labels.
      strategy:
        allOf:
        - $ref: '#/definitions/v1.DeploymentStrategy'
        description: |-
          The deployment strategy to use to replace existing pods with new ones.
          +optional
          +patchStrategy=retainKeys
      template:
        allOf:
        - $ref: '#/definitions/v1.PodTemplateSpec'
        description: Template describes the pods that will be created.
    type: object
  v1.DeploymentStatus:
    properties:
      availableReplicas:
        description: |-
          Total number of available pods (ready for at least minReadySeconds) targeted by this deployment.
          +optional
        type: integer
      collisionCount:
        description: |-
          Count of hash collisions for the Deployment. The Deployment controller uses this
          field as a collision avoidance mechanism when it needs to create the name for the
          newest ReplicaSet.
          +optional
        type: integer
      conditions:
        description: |-
          Represents the latest available observations of a deployment's current state.
          +patchMergeKey=type
          +patchStrategy=merge
        items:
          $ref: '#/definitions/v1.DeploymentCondition'
        type: array
      observedGeneration:
        description: |-
          The generation observed by the deployment controller.
          +optional
        type: integer
      readyReplicas:
        description: |-
          Total number of ready pods targeted by this deployment.
          +optional
        type: integer
      replicas:
        description: |-
          Total number of non-terminated pods targeted by this deployment (their labels match the selector).
          +optional
        type: integer
      unavailableReplicas:
        description: |-
          Total number of unavailable pods targeted by this deployment. This is the total number of
          pods that are still required for the deployment to have 100% available capacity. They may
          either be pods that are running but not yet available or pods that still have not been created.
          +optional
        type: integer
      updatedReplicas:
        description: |-
          Total number of non-terminated pods targeted by this deployment that have the desired template spec.
          +optional
        type: integer
    type: object
  v1.DeploymentStrategy:
    properties:
      rollingUpdate:
        allOf:
        - $ref: '#/definitions/v1.RollingUpdateDeployment'
        description: |-
          Rolling update config params. Present only if DeploymentStrategyType =
          RollingUpdate.
          ---
          TODO: Update this to follow our convention for oneOf, whatever we decide it
          to be.
          +optional
      type:
        allOf:
        - $ref: '#/definitions/v1.DeploymentStrategyType'
        description: |-
          Type of deployment. Can be "Recreate" or "RollingUpdate". Default is RollingUpdate.
          +optional
    type: object
  v1.DeploymentStrategyType:
    enum:
    - Recreate
    - RollingUpdate
    type: string
    x-enum-varnames:
    - RecreateDeploymentStrategyType
    - RollingUpdateDeploymentStrategyType
  v1.DownwardAPIProjection:
    properties:
      items:
        description: |-
          Items is a list of DownwardAPIVolume file
          +optional
        items:
          $ref: '#/definitions/v1.DownwardAPIVolumeFile'
        type: array
    type: object
  v1.DownwardAPIVolumeFile:
    properties:
      fieldRef:
        allOf:
        - $ref: '#/definitions/v1.ObjectFieldSelector'
        description: |-
          Required: Selects a field of the pod: only annotations, labels, name and namespace are supported.
          +optional
      mode:
        description: |-
          Optional: mode bits used to set permissions on this file, must be an octal value
          between 0000 and 0777 or a decimal value between 0 and 511.
          YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
          If not specified, the volume defaultMode will be used.
          This might be in conflict with other options that affect the file
          mode, like fsGroup, and the result can be other mode bits set.
          +optional
        type: integer
      path:
        description: 'Required: Path is  the relative path name of the file to be
          created. Must not be absolute or contain the ''..'' path. Must be utf-8
          encoded. The first item of the relative path must not start with ''..'''
        type: string
      resourceFieldRef:
        allOf:
        - $ref: '#/definitions/v1.ResourceFieldSelector'
        description: |-
          Selects a resource of the container: only resources limits and requests
          (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.
          +optional
    type: object
  v1.DownwardAPIVolumeSource:
    properties:
      defaultMode:
        description: |-
          Optional: mode bits to use on created files by default. Must be a
          Optional: mode bits used to set permissions on created files by default.
          Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
          YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
          Defaults to 0644.
          Directories within the path are not affected by this setting.
          This might be in conflict with other options that affect the file
          mode, like fsGroup, and the result can be other mode bits set.
          +optional
        type: integer
      items:
        description: |-
          Items is a list of downward API volume file
          +optional
        items:
          $ref: '#/definitions/v1.DownwardAPIVolumeFile'
        type: array
    type: object
  v1.EmptyDirVolumeSource:
    properties:
      medium:
        allOf:
        - $ref: '#/definitions/v1.StorageMedium'
        description: |-
          What type of storage medium should back this directory.
          The default is "" which means to use the node's default medium.
          Must be an empty string (default) or Memory.
          More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
          +optional
      sizeLimit:
        allOf:
        - $ref: '#/definitions/resource.Quantity'
        description: |-
          Total amount of local storage required for this EmptyDir volume.
          The size limit is also applicable for memory medium.
          The maximum usage on memory medium EmptyDir would be the minimum value between
          the SizeLimit specified here and the sum of memory limits of all containers in a pod.
          The default is nil which means that the limit is undefined.
          More info: http://kubernetes.io/docs/user-guide/volumes#emptydir
          +optional
    type: object
  v1.EnvFromSource:
    properties:
      configMapRef:
        allOf:
        - $ref: '#/definitions/v1.ConfigMapEnvSource'
        description: |-
          The ConfigMap to select from
          +optional
      prefix:
        description: |-
          An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.
          +optional
        type: string
      secretRef:
        allOf:
        - $ref: '#/definitions/v1.SecretEnvSource'
        description: |-
          The Secret to select from
          +optional
    type: object
  v1.EnvVar:
    properties:
      name:
        description: Name of the environment variable. Must be a C_IDENTIFIER.
        type: string
      value:
        description: |-
          Variable references $(VAR_NAME) are expanded
          using the previously defined environment variables in the container and
          any service environment variables. If a variable cannot be resolved,
          the reference in the input string will be unchanged. Double $$ are reduced
          to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.
          "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
          Escaped references will never be expanded, regardless of whether the variable
          exists or not.
          Defaults to "".
          +optional
        type: string
      valueFrom:
        allOf:
        - $ref: '#/definitions/v1.EnvVarSource'
        description: |-
          Source for the environment variable's value. Cannot be used if value is not empty.
          +optional
    type: object
  v1.EnvVarSource:
    properties:
      configMapKeyRef:
        allOf:
        - $ref: '#/definitions/v1.ConfigMapKeySelector'
        description: |-
          Selects a key of a ConfigMap.
          +optional
      fieldRef:
        allOf:
        - $ref: '#/definitions/v1.ObjectFieldSelector'
        description: |-
          Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,
          spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.
          +optional
      resourceFieldRef:
        allOf:
        - $ref: '#/definitions/v1.ResourceFieldSelector'
        description: |-
          Selects a resource of the container: only resources limits and requests
          (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
          +optional
      secretKeyRef:
        allOf:
        - $ref: '#/definitions/v1.SecretKeySelector'
        description: |-
          Selects a key of a secret in the pod's namespace
          +optional
    type: object
  v1.EphemeralContainer:
    properties:
      args:
        description: |-
          Arguments to the entrypoint.
          The docker image's CMD is used if this is not provided.
          Variable references $(VAR_NAME) are expanded using the container's environment. If a variable
          cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced
          to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will
          produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless
          of whether the variable exists or not. Cannot be updated.
          More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
          +optional
        items:
          type: string
        type: array
      command:
        description: |-
          Entrypoint array. Not executed within a shell.
          The docker image's ENTRYPOINT is used if this is not provided.
          Variable references $(VAR_NAME) are expanded using the container's environment. If a variable
          cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced
          to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will
          produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless
          of whether the variable exists or not. Cannot be updated.
          More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
          +optional
        items:
          type: string
        type: array
      env:
        description: |-
          List of environment variables to set in the container.
          Cannot be updated.
          +optional
          +patchMergeKey=name
          +patchStrategy=merge
        items:
          $ref: '#/definitions/v1.EnvVar'
        type: array
      envFrom:
        description: |-
          List of sources to populate environment variables in the container.
          The keys defined within a source must be a C_IDENTIFIER. All invalid keys
          will be reported as an event when the container is starting. When a key exists in multiple
          sources, the value associated with the last source will take precedence.
          Values defined by an Env with a duplicate key will take precedence.
          Cannot be updated.
          +optional
        items:
          $ref: '#/definitions/v1.EnvFromSource'
        type: array
      image:
        description: |-
          Docker image name.
          More info: https://kubernetes.io/docs/concepts/containers/images
        type: string
      imagePullPolicy:
        allOf:
        - $ref: '#/definitions/v1.PullPolicy'
        description: |-
          Image pull policy.
          One of Always, Never, IfNotPresent.
          Defaults to Always if :latest tag is specified, or IfNotPresent otherwise.
          Cannot be updated.
          More info: https://kubernetes.io/docs/concepts/containers/images#updating-images
          +optional
      lifecycle:
        allOf:
        - $ref: '#/definitions/v1.Lifecycle'
        description: |-
          Lifecycle is not allowed for ephemeral containers.
          +optional
      livenessProbe:
        allOf:
        - $ref: '#/definitions/v1.Probe'
        description: |-
          Probes are not allowed for ephemeral containers.
          +optional
      name:
        description: |-
          Name of the ephemeral container specified as a DNS_LABEL.
          This name must be unique among all containers, init containers and ephemeral containers.
        type: string
      ports:
        description: Ports are not allowed for ephemeral containers.
        items:
          $ref: '#/definitions/v1.ContainerPort'
        type: array
      readinessProbe:
        allOf:
        - $ref: '#/definitions/v1.Probe'
        description: |-
          Probes are not allowed for ephemeral containers.
          +optional
      resources:
        allOf:
        - $ref: '#/definitions/v1.ResourceRequirements'
        description: |-
          Resources are not allowed for ephemeral containers. Ephemeral containers use spare resources
          already allocated to the pod.
          +optional
      securityContext:
        allOf:
        - $ref: '#/definitions/v1.SecurityContext'
        description: |-
          Optional: SecurityContext defines the security options the ephemeral container should be run with.
          If set, the fields of SecurityContext override the equivalent fields of PodSecurityContext.
          +optional
      startupProbe:
        allOf:
        - $ref: '#/definitions/v1.Probe'
        description: |-
          Probes are not allowed for ephemeral containers.
          +optional
      stdin:
        description: |-
          Whether this container should allocate a buffer for stdin in the container runtime. If this
          is not set, reads from stdin in the container will always result in EOF.
          Default is false.
          +optional
        type: boolean
      stdinOnce:
        description: |-
          Whether the container runtime should close the stdin channel after it has been opened by
          a single attach. When stdin is true the stdin stream will remain open across multiple attach
          sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the
          first client attaches to stdin, and then remains open and accepts data until the client disconnects,
          at which time stdin is closed and remains closed until the container is restarted. If this
          flag is false, a container processes that reads from stdin will never receive an EOF.
          Default is false
          +optional
        type: boolean
      targetContainerName:
        description: |-
          If set, the name of the container from PodSpec that this ephemeral container targets.
          The ephemeral container will be run in the namespaces (IPC, PID, etc) of this container.
          If not set then the ephemeral container is run in whatever namespaces are shared
          for the pod. Note that the container runtime must support this feature.
          +optional
        type: string
      terminationMessagePath:
        description: |-
          Optional: Path at which the file to which the container's termination message
          will be written is mounted into the container's filesystem.
          Message written is intended to be brief final status, such as an assertion failure message.
          Will be truncated by the node if greater than 4096 bytes. The total message length across
          all containers will be limited to 12kb.
          Defaults to /dev/termination-log.
          Cannot be updated.
          +optional
        type: string
      terminationMessagePolicy:
        allOf:
        - $ref: '#/definitions/v1.TerminationMessagePolicy'
        description: |-
          Indicate how the termination message should be populated. File will use the contents of
          terminationMessagePath to populate the container status message on both success and failure.
          FallbackToLogsOnError will use the last chunk of container log output if the termination
          message file is empty and the container exited with an error.
          The log output is limited to 2048 bytes or 80 lines, whichever is smaller.
          Defaults to File.
          Cannot be updated.
          +optional
      tty:
        description: |-
          Whether this container should allocate a TTY for itself, also requires 'stdin' to be true.
          Default is false.
          +optional
        type: boolean
      volumeDevices:
        description: |-
          volumeDevices is the list of block devices to be used by the container.
          +patchMergeKey=devicePath
          +patchStrategy=merge
          +optional
        items:
          $ref: '#/definitions/v1.VolumeDevice'
        type: array
      volumeMounts:
        description: |-
          Pod volumes to mount into the container's filesystem.
          Cannot be updated.
          +optional
          +patchMergeKey=mountPath
          +patchStrategy=merge
        items:
          $ref: '#/definitions/v1.VolumeMount'
        type: array
      workingDir:
        description: |-
          Container's working directory.
          If not specified, the container runtime's default will be used, which
          might be configured in the container image.
          Cannot be updated.
          +optional
        type: string
    type: object
  v1.EphemeralVolumeSource:
    properties:
      volumeClaimTemplate:
        allOf:
        - $ref: '#/definitions/v1.PersistentVolumeClaimTemplate'
        description: |-
          Will be used to create a stand-alone PVC to provision the volume.
          The pod in which this EphemeralVolumeSource is embedded will be the
          owner of the PVC, i.e. the PVC will be deleted together with the
          pod.  The name of the PVC will be `<pod name>-<volume name>` where
          `<volume name>` is the name from the `PodSpec.Volumes` array
          entry. Pod validation will reject the pod if the concatenated name
          is not valid for a PVC (for example, too long).

          An existing PVC with that name that is not owned by the pod
          will *not* be used for the pod to avoid using an unrelated
          volume by mistake. Starting the pod is then blocked until
          the unrelated PVC is removed. If such a pre-created PVC is
          meant to be used by the pod, the PVC has to updated with an
          owner reference to the pod once the pod exists. Normally
          this should not be necessary, but it may be useful when
          manually reconstructing a broken cluster.

          This field is read-only and no changes will be made by Kubernetes
          to the PVC after it has been created.

          Required, must not be nil.
    type: object
  v1.ExecAction:
    properties:
      command:
        description: |-
          Command is the command line to execute inside the container, the working directory for the
          command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
          not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
          a shell, you need to explicitly call out to that shell.
          Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
          +optional
        items:
          type: string
        type: array
    type: object
  v1.FCVolumeSource:
    properties:
      fsType:
        description: |-
          Filesystem type to mount.
          Must be a filesystem type supported by the host operating system.
          Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
          TODO: how do we prevent errors in the filesystem from compromising the machine
          +optional
        type: string
      lun:
        description: |-
          Optional: FC target lun number
          +optional
        type: integer
      readOnly:
        description: |-
          Optional: Defaults to false (read/write). ReadOnly here will force
          the ReadOnly setting in VolumeMounts.
          +optional
        type: boolean
      targetWWNs:
        description: |-
          Optional: FC target worldwide names (WWNs)
          +optional
        items:
          type: string
        type: array
      wwids:
        description: |-
          Optional: FC volume world wide identifiers (wwids)
          Either wwids or combination of targetWWNs and lun must be set, but not both simultaneously.
          +optional
        items:
          type: string
        type: array
    type: object
  v1.FieldsV1:
    type: object
  v1.FlexVolumeSource:
    properties:
      driver:
        description: Driver is the name of the driver to use for this volume.
        type: string
      fsType:
        description: |-
          Filesystem type to mount.
          Must be a filesystem type supported by the host operating system.
          Ex. "ext4", "xfs", "ntfs". The default filesystem depends on FlexVolume script.
          +optional
        type: string
      options:
        additionalProperties:
          type: string
        description: |-
          Optional: Extra command options if any.
          +optional
        type: object
      readOnly:
        description: |-
          Optional: Defaults to false (read/write). ReadOnly here will force
          the ReadOnly setting in VolumeMounts.
          +optional
        type: boolean
      secretRef:
        allOf:
        - $ref: '#/definitions/v1.LocalObjectReference'
        description: |-
          Optional: SecretRef is reference to the secret object containing
          sensitive information to pass to the plugin scripts. This may be
          empty if no secret object is specified. If the secret object
          contains more than one secret, all secrets are passed to the plugin
          scripts.
          +optional
    type: object
  v1.FlockerVolumeSource:
    properties:
      datasetName:
        description: |-
          Name of the dataset stored as metadata -> name on the dataset for Flocker
          should be considered as deprecated
          +optional
        type: string
      datasetUUID:
        description: |-
          UUID of the dataset. This is unique identifier of a Flocker dataset
          +optional
        type: string
    type: object
  v1.GCEPersistentDiskVolumeSource:
    properties:
      fsType:
        description: |-
          Filesystem type of the volume that you want to mount.
          Tip: Ensure that the filesystem type is supported by the host operating system.
          Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
          More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
          TODO: how do we prevent errors in the filesystem from compromising the machine
          +optional
        type: string
      partition:
        description: |-
          The partition in the volume that you want to mount.
          If omitted, the default is to mount by volume name.
          Examples: For volume /dev/sda1, you specify the partition as "1".
          Similarly, the volume partition for /dev/sda is "0" (or you can leave the property empty).
          More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
          +optional
        type: integer
      pdName:
        description: |-
          Unique name of the PD resource in GCE. Used to identify the disk in GCE.
          More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
        type: string
      readOnly:
        description: |-
          ReadOnly here will force the ReadOnly setting in VolumeMounts.
          Defaults to false.
          More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
          +optional
        type: boolean
    type: object
  v1.GitRepoVolumeSource:
    properties:
      directory:
        description: |-
          Target directory name.
          Must not contain or start with '..'.  If '.' is supplied, the volume directory will be the
          git repository.  Otherwise, if specified, the volume will contain the git repository in
          the subdirectory with the given name.
          +optional
        type: string
      repository:
        description: Repository URL
        type: string
      revision:
        description: |-
          Commit hash for the specified revision.
          +optional
        type: string
    type: object
  v1.GlusterfsVolumeSource:
    properties:
      endpoints:
        description: |-
          EndpointsName is the endpoint name that details Glusterfs topology.
          More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
        type: string
      path:
        description: |-
          Path is the Glusterfs volume path.
          More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
        type: string
      readOnly:
        description: |-
          ReadOnly here will force the Glusterfs volume to be mounted with read-only permissions.
          Defaults to false.
          More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
          +optional
        type: boolean
    type: object
  v1.HTTPGetAction:
    properties:
      host:
        description: |-
          Host name to connect to, defaults to the pod IP. You probably want to set
          "Host" in httpHeaders instead.
          +optional
        type: string
      httpHeaders:
        description: |-
          Custom headers to set in the request. HTTP allows repeated headers.
          +optional
        items:
          $ref: '#/definitions/v1.HTTPHeader'
        type: array
      path:
        description: |-
          Path to access on the HTTP server.
          +optional
        type: string
      port:
        allOf:
        - $ref: '#/definitions/intstr.IntOrString'
        description: |-
          Name or number of the port to access on the container.
          Number must be in the range 1 to 65535.
          Name must be an IANA_SVC_NAME.
      scheme:
        allOf:
        - $ref: '#/definitions/v1.URIScheme'
        description: |-
          Scheme to use for connecting to the host.
          Defaults to HTTP.
          +optional
    type: object
  v1.HTTPHeader:
    properties:
      name:
        description: The header field name
        type: string
      value:
        description: The header field value
        type: string
    type: object
  v1.Handler:
    properties:
      exec:
        allOf:
        - $ref: '#/definitions/v1.ExecAction'
        description: |-
          One and only one of the following should be specified.
          Exec specifies the action to take.
          +optional
      httpGet:
        allOf:
        - $ref: '#/definitions/v1.HTTPGetAction'
        description: |-
          HTTPGet specifies the http request to perform.
          +optional
      tcpSocket:
        allOf:
        - $ref: '#/definitions/v1.TCPSocketAction'
        description: |-
          TCPSocket specifies an action involving a TCP port.
          TCP hooks not yet supported
          TODO: implement a realistic TCP lifecycle hook
          +optional
    type: object
  v1.HostAlias:
    properties:
      hostnames:
        description: Hostnames for the above IP address.
        items:
          type: string
        type: array
      ip:
        description: IP address of the host file entry.
        type: string
    type: object
  v1.HostPathType:
    enum:
    - ""
    - DirectoryOrCreate
    - Directory
    - FileOrCreate
    - File
    - Socket
    - CharDevice
    - BlockDevice
    type: string
    x-enum-varnames:
    - HostPathUnset
    - HostPathDirectoryOrCreate
    - HostPathDirectory
    - HostPathFileOrCreate
    - HostPathFile
    - HostPathSocket
    - HostPathCharDev
    - HostPathBlockDev
  v1.HostPathVolumeSource:
    properties:
      path:
        description: |-
          Path of the directory on the host.
          If the path is a symlink, it will follow the link to the real path.
          More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
        type: string
      type:
        allOf:
        - $ref: '#/definitions/v1.HostPathType'
        description: |-
          Type for HostPath Volume
          Defaults to ""
          More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
          +optional
    type: object
  v1.IPFamily:
    enum:
    - IPv4
    - IPv6
    type: string
    x-enum-varnames:
    - IPv4Protocol
    - IPv6Protocol
  v1.IPFamilyPolicyType:
    enum:
    - SingleStack
    - PreferDualStack
    - RequireDualStack
    type: string
    x-enum-varnames:
    - IPFamilyPolicySingleStack
    - IPFamilyPolicyPreferDualStack
    - IPFamilyPolicyRequireDualStack
  v1.ISCSIVolumeSource:
    properties:
      chapAuthDiscovery:
        description: |-
          whether support iSCSI Discovery CHAP authentication
          +optional
        type: boolean
      chapAuthSession:
        description: |-
          whether support iSCSI Session CHAP authentication
          +optional
        type: boolean
      fsType:
        description: |-
          Filesystem type of the volume that you want to mount.
          Tip: Ensure that the filesystem type is supported by the host operating system.
          Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
          More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi
          TODO: how do we prevent errors in the filesystem from compromising the machine
          +optional
        type: string
      initiatorName:
        description: |-
          Custom iSCSI Initiator Name.
          If initiatorName is specified with iscsiInterface simultaneously, new iSCSI interface
          <target portal>:<volume name> will be created for the connection.
          +optional
        type: string
      iqn:
        description: Target iSCSI Qualified Name.
        type: string
      iscsiInterface:
        description: |-
          iSCSI Interface Name that uses an iSCSI transport.
          Defaults to 'default' (tcp).
          +optional
        type: string
      lun:
        description: iSCSI Target Lun number.
        type: integer
      portals:
        description: |-
          iSCSI Target Portal List. The portal is either an IP or ip_addr:port if the port
          is other than default (typically TCP ports 860 and 3260).
          +optional
        items:
          type: string
        type: array
      readOnly:
        description: |-
          ReadOnly here will force the ReadOnly setting in VolumeMounts.
          Defaults to false.
          +optional
        type: boolean
      secretRef:
        allOf:
        - $ref: '#/definitions/v1.LocalObjectReference'
        description: |-
          CHAP Secret for iSCSI target and initiator authentication
          +optional
      targetPortal:
        description: |-
          iSCSI Target Portal. The Portal is either an IP or ip_addr:port if the port
          is other than default (typically TCP ports 860 and 3260).
        type: string
    type: object
  v1.KeyToPath:
    properties:
      key:
        description: The key to project.
        type: string
      mode:
        description: |-
          Optional: mode bits used to set permissions on this file.
          Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
          YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
          If not specified, the volume defaultMode will be used.
          This might be in conflict with other options that affect the file
          mode, like fsGroup, and the result can be other mode bits set.
          +optional
        type: integer
      path:
        description: |-
          The relative path of the file to map the key to.
          May not be an absolute path.
          May not contain the path element '..'.
          May not start with the string '..'.
        type: string
    type: object
  v1.LabelSelector:
    properties:
      matchExpressions:
        description: |-
          matchExpressions is a list of label selector requirements. The requirements are ANDed.
          +optional
        items:
          $ref: '#/definitions/v1.LabelSelectorRequirement'
        type: array
      matchLabels:
        additionalProperties:
          type: string
        description: |-
          matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
          map is equivalent to an element of matchExpressions, whose key field is "key", the
          operator is "In", and the values array contains only "value". The requirements are ANDed.
          +optional
        type: object
    type: object
  v1.LabelSelectorOperator:
    enum:
    - In
    - NotIn
    - Exists
    - DoesNotExist
    type: string
    x-enum-varnames:
    - LabelSelectorOpIn
    - LabelSelectorOpNotIn
    - LabelSelectorOpExists
    - LabelSelectorOpDoesNotExist
  v1.LabelSelectorRequirement:
    properties:
      key:
        description: |-
          key is the label key that the selector applies to.
          +patchMergeKey=key
          +patchStrategy=merge
        type: string
      operator:
        allOf:
        - $ref: '#/definitions/v1.LabelSelectorOperator'
        description: |-
          operator represents a key's relationship to a set of values.
          Valid operators are In, NotIn, Exists and DoesNotExist.
      values:
        description: |-
          values is an array of string values. If the operator is In or NotIn,
          the values array must be non-empty. If the operator is Exists or DoesNotExist,
          the values array must be empty. This array is replaced during a strategic
          merge patch.
          +optional
        items:
          type: string
        type: array
    type: object
  v1.Lifecycle:
    properties:
      postStart:
        allOf:
        - $ref: '#/definitions/v1.Handler'
        description: |-
          PostStart is called immediately after a container is created. If the handler fails,
          the container is terminated and restarted according to its restart policy.
          Other management of the container blocks until the hook completes.
          More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks
          +optional
      preStop:
        allOf:
        - $ref: '#/definitions/v1.Handler'
        description: |-
          PreStop is called immediately before a container is terminated due to an
          API request or management event such as liveness/startup probe failure,
          preemption, resource contention, etc. The handler is not called if the
          container crashes or exits. The reason for termination is passed to the
          handler. The Pod's termination grace period countdown begins before the
          PreStop hooked is executed. Regardless of the outcome of the handler, the
          container will eventually terminate within the Pod's termination grace
          period. Other management of the container blocks until the hook completes
          or until the termination grace period is reached.
          More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks
          +optional
    type: object
  v1.LoadBalancerIngress:
    properties:
      hostname:
        description: |-
          Hostname is set for load-balancer ingress points that are DNS based
          (typically AWS load-balancers)
          +optional
        type: string
      ip:
        description: |-
          IP is set for load-balancer ingress points that are IP based
          (typically GCE or OpenStack load-balancers)
          +optional
        type: string
      ports:
        description: |-
          Ports is a list of records of service ports
          If used, every port defined in the service should have an entry in it
          +listType=atomic
          +optional
        items:
          $ref: '#/definitions/v1.PortStatus'
        type: array
    type: object
  v1.LoadBalancerStatus:
    properties:
      ingress:
        description: |-
          Ingress is a list containing ingress points for the load-balancer.
          Traffic intended for the service should be sent to these ingress points.
          +optional
        items:
          $ref: '#/definitions/v1.LoadBalancerIngress'
        type: array
    type: object
  v1.LocalObjectReference:
    properties:
      name:
        description: |-
          Name of the referent.
          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
          TODO: Add other useful fields. apiVersion, kind, uid?
          +optional
        type: string
    type: object
  v1.ManagedFieldsEntry:
    properties:
      apiVersion:
        description: |-
          APIVersion defines the version of this resource that this field set
          applies to. The format is "group/version" just like the top-level
          APIVersion field. It is necessary to track the version of a field
          set because it cannot be automatically converted.
        type: string
      fieldsType:
        description: |-
          FieldsType is the discriminator for the different fields format and version.
          There is currently only one possible value: "FieldsV1"
        type: string
      fieldsV1:
        allOf:
        - $ref: '#/definitions/v1.FieldsV1'
        description: |-
          FieldsV1 holds the first JSON version format as described in the "FieldsV1" type.
          +optional
      manager:
        description: Manager is an identifier of the workflow managing these fields.
        type: string
      operation:
        allOf:
        - $ref: '#/definitions/v1.ManagedFieldsOperationType'
        description: |-
          Operation is the type of operation which lead to this ManagedFieldsEntry being created.
          The only valid values for this field are 'Apply' and 'Update'.
      subresource:
        description: |-
          Subresource is the name of the subresource used to update that object, or
          empty string if the object was updated through the main resource. The
          value of this field is used to distinguish between managers, even if they
          share the same name. For example, a status update will be distinct from a
          regular update using the same manager name.
          Note that the APIVersion field is not related to the Subresource field and
          it always corresponds to the version of the main resource.
        type: string
      time:
        description: |-
          Time is timestamp of when these fields were set. It should always be empty if Operation is 'Apply'
          +optional
        type: string
    type: object
  v1.ManagedFieldsOperationType:
    enum:
    - Apply
    - Update
    type: string
    x-enum-varnames:
    - ManagedFieldsOperationApply
    - ManagedFieldsOperationUpdate
  v1.MountPropagationMode:
    enum:
    - None
    - HostToContainer
    - Bidirectional
    type: string
    x-enum-varnames:
    - MountPropagationNone
    - MountPropagationHostToContainer
    - MountPropagationBidirectional
  v1.NFSVolumeSource:
    properties:
      path:
        description: |-
          Path that is exported by the NFS server.
          More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
        type: string
      readOnly:
        description: |-
          ReadOnly here will force
          the NFS export to be mounted with read-only permissions.
          Defaults to false.
          More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
          +optional
        type: boolean
      server:
        description: |-
          Server is the hostname or IP address of the NFS server.
          More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
        type: string
    type: object
  v1.NodeAffinity:
    properties:
      preferredDuringSchedulingIgnoredDuringExecution:
        description: |-
          The scheduler will prefer to schedule pods to nodes that satisfy
          the affinity expressions specified by this field, but it may choose
          a node that violates one or more of the expressions. The node that is
          most preferred is the one with the greatest sum of weights, i.e.
          for each node that meets all of the scheduling requirements (resource
          request, requiredDuringScheduling affinity expressions, etc.),
          compute a sum by iterating through the elements of this field and adding
          "weight" to the sum if the node matches the corresponding matchExpressions; the
          node(s) with the highest sum are the most preferred.
          +optional
        items:
          $ref: '#/definitions/v1.PreferredSchedulingTerm'
        type: array
      requiredDuringSchedulingIgnoredDuringExecution:
        allOf:
        - $ref: '#/definitions/v1.NodeSelector'
        description: |-
          If the affinity requirements specified by this field are not met at
          scheduling time, the pod will not be scheduled onto the node.
          If the affinity requirements specified by this field cease to be met
          at some point during pod execution (e.g. due to an update), the system
          may or may not try to eventually evict the pod from its node.
          +optional
    type: object
  v1.NodeSelector:
    properties:
      nodeSelectorTerms:
        description: Required. A list of node selector terms. The terms are ORed.
        items:
          $ref: '#/definitions/v1.NodeSelectorTerm'
        type: array
    type: object
  v1.NodeSelectorOperator:
    enum:
    - In
    - NotIn
    - Exists
    - DoesNotExist
    - Gt
    - Lt
    type: string
    x-enum-varnames:
    - NodeSelectorOpIn
    - NodeSelectorOpNotIn
    - NodeSelectorOpExists
    - NodeSelectorOpDoesNotExist
    - NodeSelectorOpGt
    - NodeSelectorOpLt
  v1.NodeSelectorRequirement:
    properties:
      key:
        description: The label key that the selector applies to.
        type: string
      operator:
        allOf:
        - $ref: '#/definitions/v1.NodeSelectorOperator'
        description: |-
          Represents a key's relationship to a set of values.
          Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
      values:
        description: |-
          An array of string values. If the operator is In or NotIn,
          the values array must be non-empty. If the operator is Exists or DoesNotExist,
          the values array must be empty. If the operator is Gt or Lt, the values
          array must have a single element, which will be interpreted as an integer.
          This array is replaced during a strategic merge patch.
          +optional
        items:
          type: string
        type: array
    type: object
  v1.NodeSelectorTerm:
    properties:
      matchExpressions:
        description: |-
          A list of node selector requirements by node's labels.
          +optional
        items:
          $ref: '#/definitions/v1.NodeSelectorRequirement'
        type: array
      matchFields:
        description: |-
          A list of node selector requirements by node's fields.
          +optional
        items:
          $ref: '#/definitions/v1.NodeSelectorRequirement'
        type: array
    type: object
  v1.ObjectFieldSelector:
    properties:
      apiVersion:
        description: |-
          Version of the schema the FieldPath is written in terms of, defaults to "v1".
          +optional
        type: string
      fieldPath:
        description: Path of the field to select in the specified API version.
        type: string
    type: object
  v1.ObjectMeta:
    properties:
      annotations:
        additionalProperties:
          type: string
        description: |-
          Annotations is an unstructured key value map stored with a resource that may be
          set by external tools to store and retrieve arbitrary metadata. They are not
          queryable and should be preserved when modifying objects.
          More info: http://kubernetes.io/docs/user-guide/annotations
          +optional
        type: object
      clusterName:
        description: |-
          The name of the cluster which the object belongs to.
          This is used to distinguish resources with same name and namespace in different clusters.
          This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.
          +optional
        type: string
      creationTimestamp:
        description: |-
          CreationTimestamp is a timestamp representing the server time when this object was
          created. It is not guaranteed to be set in happens-before order across separate operations.
          Clients may not set this value. It is represented in RFC3339 form and is in UTC.

          Populated by the system.
          Read-only.
          Null for lists.
          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
          +optional
        type: string
      deletionGracePeriodSeconds:
        description: |-
          Number of seconds allowed for this object to gracefully terminate before
          it will be removed from the system. Only set when deletionTimestamp is also set.
          May only be shortened.
          Read-only.
          +optional
        type: integer
      deletionTimestamp:
        description: |-
          DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This
          field is set by the server when a graceful deletion is requested by the user, and is not
          directly settable by a client. The resource is expected to be deleted (no longer visible
          from resource lists, and not reachable by name) after the time in this field, once the
          finalizers list is empty. As long as the finalizers list contains items, deletion is blocked.
          Once the deletionTimestamp is set, this value may not be unset or be set further into the
          future, although it may be shortened or the resource may be deleted prior to this time.
          For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react
          by sending a graceful termination signal to the containers in the pod. After that 30 seconds,
          the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup,
          remove the pod from the API. In the presence of network partitions, this object may still
          exist after this timestamp, until an administrator or automated process can determine the
          resource is fully terminated.
          If not set, graceful deletion of the object has not been requested.

          Populated by the system when a graceful deletion is requested.
          Read-only.
          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
          +optional
        type: string
      finalizers:
        description: |-
          Must be empty before the object is deleted from the registry. Each entry
          is an identifier for the responsible component that will remove the entry
          from the list. If the deletionTimestamp of the object is non-nil, entries
          in this list can only be removed.
          Finalizers may be processed and removed in any order.  Order is NOT enforced
          because it introduces significant risk of stuck finalizers.
          finalizers is a shared field, any actor with permission can reorder it.
          If the finalizer list is processed in order, then this can lead to a situation
          in which the component responsible for the first finalizer in the list is
          waiting for a signal (field value, external system, or other) produced by a
          component responsible for a finalizer later in the list, resulting in a deadlock.
          Without enforced ordering finalizers are free to order amongst themselves and
          are not vulnerable to ordering changes in the list.
          +optional
          +patchStrategy=merge
        items:
          type: string
        type: array
      generateName:
        description: |-
          GenerateName is an optional prefix, used by the server, to generate a unique
          name ONLY IF the Name field has not been provided.
          If this field is used, the name returned to the client will be different
          than the name passed. This value will also be combined with a unique suffix.
          The provided value has the same validation rules as the Name field,
          and may be truncated by the length of the suffix required to make the value
          unique on the server.

          If this field is specified and the generated name exists, the server will
          NOT return a 409 - instead, it will either return 201 Created or 500 with Reason
          ServerTimeout indicating a unique name could not be found in the time allotted, and the client
          should retry (optionally after the time indicated in the Retry-After header).

          Applied only if Name is not specified.
          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency
          +optional
        type: string
      generation:
        description: |-
          A sequence number representing a specific generation of the desired state.
          Populated by the system. Read-only.
          +optional
        type: integer
      labels:
        additionalProperties:
          type: string
        description: |-
          Map of string keys and values that can be used to organize and categorize
          (scope and select) objects. May match selectors of replication controllers
          and services.
          More info: http://kubernetes.io/docs/user-guide/labels
          +optional
        type: object
      managedFields:
        description: |-
          ManagedFields maps workflow-id and version to the set of fields
          that are managed by that workflow. This is mostly for internal
          housekeeping, and users typically shouldn't need to set or
          understand this field. A workflow can be the user's name, a
          controller's name, or the name of a specific apply path like
          "ci-cd". The set of fields is always in the version that the
          workflow used when modifying the object.

          +optional
        items:
          $ref: '#/definitions/v1.ManagedFieldsEntry'
        type: array
      name:
        description: |-
          Name must be unique within a namespace. Is required when creating resources, although
          some resources may allow a client to request the generation of an appropriate name
          automatically. Name is primarily intended for creation idempotence and configuration
          definition.
          Cannot be updated.
          More info: http://kubernetes.io/docs/user-guide/identifiers#names
          +optional
        type: string
      namespace:
        description: |-
          Namespace defines the space within which each name must be unique. An empty namespace is
          equivalent to the "default" namespace, but "default" is the canonical representation.
          Not all objects are required to be scoped to a namespace - the value of this field for
          those objects will be empty.

          Must be a DNS_LABEL.
          Cannot be updated.
          More info: http://kubernetes.io/docs/user-guide/namespaces
          +optional
        type: string
      ownerReferences:
        description: |-
          List of objects depended by this object. If ALL objects in the list have
          been deleted, this object will be garbage collected. If this object is managed by a controller,
          then an entry in this list will point to this controller, with the controller field set to true.
          There cannot be more than one managing controller.
          +optional
          +patchMergeKey=uid
          +patchStrategy=merge
        items:
          $ref: '#/definitions/v1.OwnerReference'
        type: array
      resourceVersion:
        description: |-
          An opaque value that represents the internal version of this object that can
          be used by clients to determine when objects have changed. May be used for optimistic
          concurrency, change detection, and the watch operation on a resource or set of resources.
          Clients must treat these values as opaque and passed unmodified back to the server.
          They may only be valid for a particular resource or set of resources.

          Populated by the system.
          Read-only.
          Value must be treated as opaque by clients and .
          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
          +optional
        type: string
      selfLink:
        description: |-
          SelfLink is a URL representing this object.
          Populated by the system.
          Read-only.

          DEPRECATED
          Kubernetes will stop propagating this field in 1.20 release and the field is planned
          to be removed in 1.21 release.
          +optional
        type: string
      uid:
        description: |-
          UID is the unique in time and space value for this object. It is typically generated by
          the server on successful creation of a resource and is not allowed to change on PUT
          operations.

          Populated by the system.
          Read-only.
          More info: http://kubernetes.io/docs/user-guide/identifiers#uids
          +optional
        type: string
    type: object
  v1.OwnerReference:
    properties:
      apiVersion:
        description: API version of the referent.
        type: string
      blockOwnerDeletion:
        description: |-
          If true, AND if the owner has the "foregroundDeletion" finalizer, then
          the owner cannot be deleted from the key-value store until this
          reference is removed.
          Defaults to false.
          To set this field, a user needs "delete" permission of the owner,
          otherwise 422 (Unprocessable Entity) will be returned.
          +optional
        type: boolean
      controller:
        description: |-
          If true, this reference points to the managing controller.
          +optional
        type: boolean
      kind:
        description: |-
          Kind of the referent.
          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
        type: string
      name:
        description: |-
          Name of the referent.
          More info: http://kubernetes.io/docs/user-guide/identifiers#names
        type: string
      uid:
        description: |-
          UID of the referent.
          More info: http://kubernetes.io/docs/user-guide/identifiers#uids
        type: string
    type: object
  v1.PersistentVolumeAccessMode:
    enum:
    - ReadWriteOnce
    - ReadOnlyMany
    - ReadWriteMany
    - ReadWriteOncePod
    type: string
    x-enum-varnames:
    - ReadWriteOnce
    - ReadOnlyMany
    - ReadWriteMany
    - ReadWriteOncePod
  v1.PersistentVolumeClaim:
    properties:
      apiVersion:
        description: |-
          APIVersion defines the versioned schema of this representation of an object.
          Servers should convert recognized schemas to the latest internal value, and
          may reject unrecognized values.
          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
          +optional
        type: string
      kind:
        description: |-
          Kind is a string value representing the REST resource this object represents.
          Servers may infer this from the endpoint the client submits requests to.
          Cannot be updated.
          In CamelCase.
          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
          +optional
        type: string
      metadata:
        allOf:
        - $ref: '#/definitions/v1.ObjectMeta'
        description: |-
          Standard object's metadata.
          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
          +optional
      spec:
        allOf:
        - $ref: '#/definitions/v1.PersistentVolumeClaimSpec'
        description: |-
          Spec defines the desired characteristics of a volume requested by a pod author.
          More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
          +optional
      status:
        allOf:
        - $ref: '#/definitions/v1.PersistentVolumeClaimStatus'
        description: |-
          Status represents the current information/status of a persistent volume claim.
          Read-only.
          More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
          +optional
    type: object
  v1.PersistentVolumeClaimCondition:
    properties:
      lastProbeTime:
        description: |-
          Last time we probed the condition.
          +optional
        type: string
      lastTransitionTime:
        description: |-
          Last time the condition transitioned from one status to another.
          +optional
        type: string
      message:
        description: |-
          Human-readable message indicating details about last transition.
          +optional
        type: string
      reason:
        description: |-
          Unique, this should be a short, machine understandable string that gives the reason
          for condition's last transition. If it reports "ResizeStarted" that means the underlying
          persistent volume is being resized.
          +optional
        type: string
      status:
        $ref: '#/definitions/k8s_io_api_core_v1.ConditionStatus'
      type:
        $ref: '#/definitions/v1.PersistentVolumeClaimConditionType'
    type: object
  v1.PersistentVolumeClaimConditionType:
    enum:
    - Resizing
    - FileSystemResizePending
    type: string
    x-enum-varnames:
    - PersistentVolumeClaimResizing
    - PersistentVolumeClaimFileSystemResizePending
  v1.PersistentVolumeClaimPhase:
    enum:
    - Pending
    - Bound
    - Lost
    type: string
    x-enum-varnames:
    - ClaimPending
    - ClaimBound
    - ClaimLost
  v1.PersistentVolumeClaimSpec:
    properties:
      accessModes:
        description: |-
          AccessModes contains the desired access modes the volume should have.
          More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
          +optional
        items:
          $ref: '#/definitions/v1.PersistentVolumeAccessMode'
        type: array
      dataSource:
        allOf:
        - $ref: '#/definitions/v1.TypedLocalObjectReference'
        description: |-
          This field can be used to specify either:
          * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot)
          * An existing PVC (PersistentVolumeClaim)
          If the provisioner or an external controller can support the specified data source,
          it will create a new volume based on the contents of the specified data source.
          If the AnyVolumeDataSource feature gate is enabled, this field will always have
          the same contents as the DataSourceRef field.
          +optional
      dataSourceRef:
        allOf:
        - $ref: '#/definitions/v1.TypedLocalObjectReference'
        description: |-
          Specifies the object from which to populate the volume with data, if a non-empty
          volume is desired. This may be any local object from a non-empty API group (non
          core object) or a PersistentVolumeClaim object.
          When this field is specified, volume binding will only succeed if the type of
          the specified object matches some installed volume populator or dynamic
          provisioner.
          This field will replace the functionality of the DataSource field and as such
          if both fields are non-empty, they must have the same value. For backwards
          compatibility, both fields (DataSource and DataSourceRef) will be set to the same
          value automatically if one of them is empty and the other is non-empty.
          There are two important differences between DataSource and DataSourceRef:
          * While DataSource only allows two specific types of objects, DataSourceRef
            allows any non-core object, as well as PersistentVolumeClaim objects.
          * While DataSource ignores disallowed values (dropping them), DataSourceRef
            preserves all values, and generates an error if a disallowed value is
            specified.
          (Alpha) Using this field requires the AnyVolumeDataSource feature gate to be enabled.
          +optional
      resources:
        allOf:
        - $ref: '#/definitions/v1.ResourceRequirements'
        description: |-
          Resources represents the minimum resources the volume should have.
          More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources
          +optional
      selector:
        allOf:
        - $ref: '#/definitions/v1.LabelSelector'
        description: |-
          A label query over volumes to consider for binding.
          +optional
      storageClassName:
        description: |-
          Name of the StorageClass required by the claim.
          More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1
          +optional
        type: string
      volumeMode:
        allOf:
        - $ref: '#/definitions/v1.PersistentVolumeMode'
        description: |-
          volumeMode defines what type of volume is required by the claim.
          Value of Filesystem is implied when not included in claim spec.
          +optional
      volumeName:
        description: |-
          VolumeName is the binding reference to the PersistentVolume backing this claim.
          +optional
        type: string
    type: object
  v1.PersistentVolumeClaimStatus:
    properties:
      accessModes:
        description: |-
          AccessModes contains the actual access modes the volume backing the PVC has.
          More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
          +optional
        items:
          $ref: '#/definitions/v1.PersistentVolumeAccessMode'
        type: array
      capacity:
        allOf:
        - $ref: '#/definitions/v1.ResourceList'
        description: |-
          Represents the actual resources of the underlying volume.
          +optional
      conditions:
        description: |-
          Current Condition of persistent volume claim. If underlying persistent volume is being
          resized then the Condition will be set to 'ResizeStarted'.
          +optional
          +patchMergeKey=type
          +patchStrategy=merge
        items:
          $ref: '#/definitions/v1.PersistentVolumeClaimCondition'
        type: array
      phase:
        allOf:
        - $ref: '#/definitions/v1.PersistentVolumeClaimPhase'
        description: |-
          Phase represents the current phase of PersistentVolumeClaim.
          +optional
    type: object
  v1.PersistentVolumeClaimTemplate:
    properties:
      metadata:
        allOf:
        - $ref: '#/definitions/v1.ObjectMeta'
        description: |-
          May contain labels and annotations that will be copied into the PVC
          when creating it. No other fields are allowed and will be rejected during
          validation.

          +optional
      spec:
        allOf:
        - $ref: '#/definitions/v1.PersistentVolumeClaimSpec'
        description: |-
          The specification for the PersistentVolumeClaim. The entire content is
          copied unchanged into the PVC that gets created from this
          template. The same fields as in a PersistentVolumeClaim
          are also valid here.
    type: object
  v1.PersistentVolumeClaimVolumeSource:
    properties:
      claimName:
        description: |-
          ClaimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume.
          More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
        type: string
      readOnly:
        description: |-
          Will force the ReadOnly setting in VolumeMounts.
          Default false.
          +optional
        type: boolean
    type: object
  v1.PersistentVolumeMode:
    enum:
    - Block
    - Filesystem
    type: string
    x-enum-varnames:
    - PersistentVolumeBlock
    - PersistentVolumeFilesystem
  v1.PhotonPersistentDiskVolumeSource:
    properties:
      fsType:
        description: |-
          Filesystem type to mount.
          Must be a filesystem type supported by the host operating system.
          Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
        type: string
      pdID:
        description: ID that identifies Photon Controller persistent disk
        type: string
    type: object
  v1.PodAffinity:
    properties:
      preferredDuringSchedulingIgnoredDuringExecution:
        description: |-
          The scheduler will prefer to schedule pods to nodes that satisfy
          the affinity expressions specified by this field, but it may choose
          a node that violates one or more of the expressions. The node that is
          most preferred is the one with the greatest sum of weights, i.e.
          for each node that meets all of the scheduling requirements (resource
          request, requiredDuringScheduling affinity expressions, etc.),
          compute a sum by iterating through the elements of this field and adding
          "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the
          node(s) with the highest sum are the most preferred.
          +optional
        items:
          $ref: '#/definitions/v1.WeightedPodAffinityTerm'
        type: array
      requiredDuringSchedulingIgnoredDuringExecution:
        description: |-
          If the affinity requirements specified by this field are not met at
          scheduling time, the pod will not be scheduled onto the node.
          If the affinity requirements specified by this field cease to be met
          at some point during pod execution (e.g. due to a pod label update), the
          system may or may not try to eventually evict the pod from its node.
          When there are multiple elements, the lists of nodes corresponding to each
          podAffinityTerm are intersected, i.e. all terms must be satisfied.
          +optional
        items:
          $ref: '#/definitions/v1.PodAffinityTerm'
        type: array
    type: object
  v1.PodAffinityTerm:
    properties:
      labelSelector:
        allOf:
        - $ref: '#/definitions/v1.LabelSelector'
        description: |-
          A label query over a set of resources, in this case pods.
          +optional
      namespaceSelector:
        allOf:
        - $ref: '#/definitions/v1.LabelSelector'
        description: |-
          A label query over the set of namespaces that the term applies to.
          The term is applied to the union of the namespaces selected by this field
          and the ones listed in the namespaces field.
          null selector and null or empty namespaces list means "this pod's namespace".
          An empty selector ({}) matches all namespaces.
          This field is beta-level and is only honored when PodAffinityNamespaceSelector feature is enabled.
          +optional
      namespaces:
        description: |-
          namespaces specifies a static list of namespace names that the term applies to.
          The term is applied to the union of the namespaces listed in this field
          and the ones selected by namespaceSelector.
          null or empty namespaces list and null namespaceSelector means "this pod's namespace"
          +optional
        items:
          type: string
        type: array
      topologyKey:
        description: |-
          This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
          the labelSelector in the specified namespaces, where co-located is defined as running on a node
          whose value of the label with key topologyKey matches that of any node on which any of the
          selected pods is running.
          Empty topologyKey is not allowed.
        type: string
    type: object
  v1.PodAntiAffinity:
    properties:
      preferredDuringSchedulingIgnoredDuringExecution:
        description: |-
          The scheduler will prefer to schedule pods to nodes that satisfy
          the anti-affinity expressions specified by this field, but it may choose
          a node that violates one or more of the expressions. The node that is
          most preferred is the one with the greatest sum of weights, i.e.
          for each node that meets all of the scheduling requirements (resource
          request, requiredDuringScheduling anti-affinity expressions, etc.),
          compute a sum by iterating through the elements of this field and adding
          "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the
          node(s) with the highest sum are the most preferred.
          +optional
        items:
          $ref: '#/definitions/v1.WeightedPodAffinityTerm'
        type: array
      requiredDuringSchedulingIgnoredDuringExecution:
        description: |-
          If the anti-affinity requirements specified by this field are not met at
          scheduling time, the pod will not be scheduled onto the node.
          If the anti-affinity requirements specified by this field cease to be met
          at some point during pod execution (e.g. due to a pod label update), the
          system may or may not try to eventually evict the pod from its node.
          When there are multiple elements, the lists of nodes corresponding to each
          podAffinityTerm are intersected, i.e. all terms must be satisfied.
          +optional
        items:
          $ref: '#/definitions/v1.PodAffinityTerm'
        type: array
    type: object
  v1.PodConditionType:
    enum:
    - ContainersReady
    - Initialized
    - Ready
    - PodScheduled
    type: string
    x-enum-varnames:
    - ContainersReady
    - PodInitialized
    - PodReady
    - PodScheduled
  v1.PodDNSConfig:
    properties:
      nameservers:
        description: |-
          A list of DNS name server IP addresses.
          This will be appended to the base nameservers generated from DNSPolicy.
          Duplicated nameservers will be removed.
          +optional
        items:
          type: string
        type: array
      options:
        description: |-
          A list of DNS resolver options.
          This will be merged with the base options generated from DNSPolicy.
          Duplicated entries will be removed. Resolution options given in Options
          will override those that appear in the base DNSPolicy.
          +optional
        items:
          $ref: '#/definitions/v1.PodDNSConfigOption'
        type: array
      searches:
        description: |-
          A list of DNS search domains for host-name lookup.
          This will be appended to the base search paths generated from DNSPolicy.
          Duplicated search paths will be removed.
          +optional
        items:
          type: string
        type: array
    type: object
  v1.PodDNSConfigOption:
    properties:
      name:
        description: Required.
        type: string
      value:
        description: +optional
        type: string
    type: object
  v1.PodFSGroupChangePolicy:
    enum:
    - OnRootMismatch
    - Always
    type: string
    x-enum-varnames:
    - FSGroupChangeOnRootMismatch
    - FSGroupChangeAlways
  v1.PodReadinessGate:
    properties:
      conditionType:
        allOf:
        - $ref: '#/definitions/v1.PodConditionType'
        description: ConditionType refers to a condition in the pod's condition list
          with matching type.
    type: object
  v1.PodSecurityContext:
    properties:
      fsGroup:
        description: |-
          A special supplemental group that applies to all containers in a pod.
          Some volume types allow the Kubelet to change the ownership of that volume
          to be owned by the pod:

          1. The owning GID will be the FSGroup
          2. The setgid bit is set (new files created in the volume will be owned by FSGroup)
          3. The permission bits are OR'd with rw-rw----

          If unset, the Kubelet will not modify the ownership and permissions of any volume.
          +optional
        type: integer
      fsGroupChangePolicy:
        allOf:
        - $ref: '#/definitions/v1.PodFSGroupChangePolicy'
        description: |-
          fsGroupChangePolicy defines behavior of changing ownership and permission of the volume
          before being exposed inside Pod. This field will only apply to
          volume types which support fsGroup based ownership(and permissions).
          It will have no effect on ephemeral volume types such as: secret, configmaps
          and emptydir.
          Valid values are "OnRootMismatch" and "Always". If not specified, "Always" is used.
          +optional
      runAsGroup:
        description: |-
          The GID to run the entrypoint of the container process.
          Uses runtime default if unset.
          May also be set in SecurityContext.  If set in both SecurityContext and
          PodSecurityContext, the value specified in SecurityContext takes precedence
          for that container.
          +optional
        type: integer
      runAsNonRoot:
        description: |-
          Indicates that the container must run as a non-root user.
          If true, the Kubelet will validate the image at runtime to ensure that it
          does not run as UID 0 (root) and fail to start the container if it does.
          If unset or false, no such validation will be performed.
          May also be set in SecurityContext.  If set in both SecurityContext and
          PodSecurityContext, the value specified in SecurityContext takes precedence.
          +optional
        type: boolean
      runAsUser:
        description: |-
          The UID to run the entrypoint of the container process.
          Defaults to user specified in image metadata if unspecified.
          May also be set in SecurityContext.  If set in both SecurityContext and
          PodSecurityContext, the value specified in SecurityContext takes precedence
          for that container.
          +optional
        type: integer
      seLinuxOptions:
        allOf:
        - $ref: '#/definitions/v1.SELinuxOptions'
        description: |-
          The SELinux context to be applied to all containers.
          If unspecified, the container runtime will allocate a random SELinux context for each
          container.  May also be set in SecurityContext.  If set in
          both SecurityContext and PodSecurityContext, the value specified in SecurityContext
          takes precedence for that container.
          +optional
      seccompProfile:
        allOf:
        - $ref: '#/definitions/v1.SeccompProfile'
        description: |-
          The seccomp options to use by the containers in this pod.
          +optional
      supplementalGroups:
        description: |-
          A list of groups applied to the first process run in each container, in addition
          to the container's primary GID.  If unspecified, no groups will be added to
          any container.
          +optional
        items:
          type: integer
        type: array
      sysctls:
        description: |-
          Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported
          sysctls (by the container runtime) might fail to launch.
          +optional
        items:
          $ref: '#/definitions/v1.Sysctl'
        type: array
      windowsOptions:
        allOf:
        - $ref: '#/definitions/v1.WindowsSecurityContextOptions'
        description: |-
          The Windows specific settings applied to all containers.
          If unspecified, the options within a container's SecurityContext will be used.
          If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
          +optional
    type: object
  v1.PodSpec:
    properties:
      activeDeadlineSeconds:
        description: |-
          Optional duration in seconds the pod may be active on the node relative to
          StartTime before the system will actively try to mark it failed and kill associated containers.
          Value must be a positive integer.
          +optional
        type: integer
      affinity:
        allOf:
        - $ref: '#/definitions/v1.Affinity'
        description: |-
          If specified, the pod's scheduling constraints
          +optional
      automountServiceAccountToken:
        description: |-
          AutomountServiceAccountToken indicates whether a service account token should be automatically mounted.
          +optional
        type: boolean
      containers:
        description: |-
          List of containers belonging to the pod.
          Containers cannot currently be added or removed.
          There must be at least one container in a Pod.
          Cannot be updated.
          +patchMergeKey=name
          +patchStrategy=merge
        items:
          $ref: '#/definitions/v1.Container'
        type: array
      dnsConfig:
        allOf:
        - $ref: '#/definitions/v1.PodDNSConfig'
        description: |-
          Specifies the DNS parameters of a pod.
          Parameters specified here will be merged to the generated DNS
          configuration based on DNSPolicy.
          +optional
      dnsPolicy:
        allOf:
        - $ref: '#/definitions/v1.DNSPolicy'
        description: |-
          Set DNS policy for the pod.
          Defaults to "ClusterFirst".
          Valid values are 'ClusterFirstWithHostNet', 'ClusterFirst', 'Default' or 'None'.
          DNS parameters given in DNSConfig will be merged with the policy selected with DNSPolicy.
          To have DNS options set along with hostNetwork, you have to specify DNS policy
          explicitly to 'ClusterFirstWithHostNet'.
          +optional
      enableServiceLinks:
        description: |-
          EnableServiceLinks indicates whether information about services should be injected into pod's
          environment variables, matching the syntax of Docker links.
          Optional: Defaults to true.
          +optional
        type: boolean
      ephemeralContainers:
        description: |-
          List of ephemeral containers run in this pod. Ephemeral containers may be run in an existing
          pod to perform user-initiated actions such as debugging. This list cannot be specified when
          creating a pod, and it cannot be modified by updating the pod spec. In order to add an
          ephemeral container to an existing pod, use the pod's ephemeralcontainers subresource.
          This field is alpha-level and is only honored by servers that enable the EphemeralContainers feature.
          +optional
          +patchMergeKey=name
          +patchStrategy=merge
        items:
          $ref: '#/definitions/v1.EphemeralContainer'
        type: array
      hostAliases:
        description: |-
          HostAliases is an optional list of hosts and IPs that will be injected into the pod's hosts
          file if specified. This is only valid for non-hostNetwork pods.
          +optional
          +patchMergeKey=ip
          +patchStrategy=merge
        items:
          $ref: '#/definitions/v1.HostAlias'
        type: array
      hostIPC:
        description: |-
          Use the host's ipc namespace.
          Optional: Default to false.
          +k8s:conversion-gen=false
          +optional
        type: boolean
      hostNetwork:
        description: |-
          Host networking requested for this pod. Use the host's network namespace.
          If this option is set, the ports that will be used must be specified.
          Default to false.
          +k8s:conversion-gen=false
          +optional
        type: boolean
      hostPID:
        description: |-
          Use the host's pid namespace.
          Optional: Default to false.
          +k8s:conversion-gen=false
          +optional
        type: boolean
      hostname:
        description: |-
          Specifies the hostname of the Pod
          If not specified, the pod's hostname will be set to a system-defined value.
          +optional
        type: string
      imagePullSecrets:
        description: |-
          ImagePullSecrets is an optional list of references to secrets in the same namespace to use for pulling any of the images used by this PodSpec.
          If specified, these secrets will be passed to individual puller implementations for them to use. For example,
          in the case of docker, only DockerConfig type secrets are honored.
          More info: https://kubernetes.io/docs/concepts/containers/images#specifying-imagepullsecrets-on-a-pod
          +optional
          +patchMergeKey=name
          +patchStrategy=merge
        items:
          $ref: '#/definitions/v1.LocalObjectReference'
        type: array
      initContainers:
        description: |-
          List of initialization containers belonging to the pod.
          Init containers are executed in order prior to containers being started. If any
          init container fails, the pod is considered to have failed and is handled according
          to its restartPolicy. The name for an init container or normal container must be
          unique among all containers.
          Init containers may not have Lifecycle actions, Readiness probes, Liveness probes, or Startup probes.
          The resourceRequirements of an init container are taken into account during scheduling
          by finding the highest request/limit for each resource type, and then using the max of
          of that value or the sum of the normal containers. Limits are applied to init containers
          in a similar fashion.
          Init containers cannot currently be added or removed.
          Cannot be updated.
          More info: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
          +patchMergeKey=name
          +patchStrategy=merge
        items:
          $ref: '#/definitions/v1.Container'
        type: array
      nodeName:
        description: |-
          NodeName is a request to schedule this pod onto a specific node. If it is non-empty,
          the scheduler simply schedules this pod onto that node, assuming that it fits resource
          requirements.
          +optional
        type: string
      nodeSelector:
        additionalProperties:
          type: string
        description: |-
          NodeSelector is a selector which must be true for the pod to fit on a node.
          Selector which must match a node's labels for the pod to be scheduled on that node.
          More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
          +optional
          +mapType=atomic
        type: object
      overhead:
        allOf:
        - $ref: '#/definitions/v1.ResourceList'
        description: |-
          Overhead represents the resource overhead associated with running a pod for a given RuntimeClass.
          This field will be autopopulated at admission time by the RuntimeClass admission controller. If
          the RuntimeClass admission controller is enabled, overhead must not be set in Pod create requests.
          The RuntimeClass admission controller will reject Pod create requests which have the overhead already
          set. If RuntimeClass is configured and selected in the PodSpec, Overhead will be set to the value
          defined in the corresponding RuntimeClass, otherwise it will remain unset and treated as zero.
          More info: https://git.k8s.io/enhancements/keps/sig-node/688-pod-overhead/README.md
          This field is beta-level as of Kubernetes v1.18, and is only honored by servers that enable the PodOverhead feature.
          +optional
      preemptionPolicy:
        allOf:
        - $ref: '#/definitions/v1.PreemptionPolicy'
        description: |-
          PreemptionPolicy is the Policy for preempting pods with lower priority.
          One of Never, PreemptLowerPriority.
          Defaults to PreemptLowerPriority if unset.
          This field is beta-level, gated by the NonPreemptingPriority feature-gate.
          +optional
      priority:
        description: |-
          The priority value. Various system components use this field to find the
          priority of the pod. When Priority Admission Controller is enabled, it
          prevents users from setting this field. The admission controller populates
          this field from PriorityClassName.
          The higher the value, the higher the priority.
          +optional
        type: integer
      priorityClassName:
        description: |-
          If specified, indicates the pod's priority. "system-node-critical" and
          "system-cluster-critical" are two special keywords which indicate the
          highest priorities with the former being the highest priority. Any other
          name must be defined by creating a PriorityClass object with that name.
          If not specified, the pod priority will be default or zero if there is no
          default.
          +optional
        type: string
      readinessGates:
        description: |-
          If specified, all readiness gates will be evaluated for pod readiness.
          A pod is ready when all its containers are ready AND
          all conditions specified in the readiness gates have status equal to "True"
          More info: https://git.k8s.io/enhancements/keps/sig-network/580-pod-readiness-gates
          +optional
        items:
          $ref: '#/definitions/v1.PodReadinessGate'
        type: array
      restartPolicy:
        allOf:
        - $ref: '#/definitions/v1.RestartPolicy'
        description: |-
          Restart policy for all containers within the pod.
          One of Always, OnFailure, Never.
          Default to Always.
          More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#restart-policy
          +optional
      runtimeClassName:
        description: |-
          RuntimeClassName refers to a RuntimeClass object in the node.k8s.io group, which should be used
          to run this pod.  If no RuntimeClass resource matches the named class, the pod will not be run.
          If unset or empty, the "legacy" RuntimeClass will be used, which is an implicit class with an
          empty definition that uses the default runtime handler.
          More info: https://git.k8s.io/enhancements/keps/sig-node/585-runtime-class
          This is a beta feature as of Kubernetes v1.14.
          +optional
        type: string
      schedulerName:
        description: |-
          If specified, the pod will be dispatched by specified scheduler.
          If not specified, the pod will be dispatched by default scheduler.
          +optional
        type: string
      securityContext:
        allOf:
        - $ref: '#/definitions/v1.PodSecurityContext'
        description: |-
          SecurityContext holds pod-level security attributes and common container settings.
          Optional: Defaults to empty.  See type description for default values of each field.
          +optional
      serviceAccount:
        description: |-
          DeprecatedServiceAccount is a depreciated alias for ServiceAccountName.
          Deprecated: Use serviceAccountName instead.
          +k8s:conversion-gen=false
          +optional
        type: string
      serviceAccountName:
        description: |-
          ServiceAccountName is the name of the ServiceAccount to use to run this pod.
          More info: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
          +optional
        type: string
      setHostnameAsFQDN:
        description: |-
          If true the pod's hostname will be configured as the pod's FQDN, rather than the leaf name (the default).
          In Linux containers, this means setting the FQDN in the hostname field of the kernel (the nodename field of struct utsname).
          In Windows containers, this means setting the registry value of hostname for the registry key HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters to FQDN.
          If a pod does not have FQDN, this has no effect.
          Default to false.
          +optional
        type: boolean
      shareProcessNamespace:
        description: |-
          Share a single process namespace between all of the containers in a pod.
          When this is set containers will be able to view and signal processes from other containers
          in the same pod, and the first process in each container will not be assigned PID 1.
          HostPID and ShareProcessNamespace cannot both be set.
          Optional: Default to false.
          +k8s:conversion-gen=false
          +optional
        type: boolean
      subdomain:
        description: |-
          If specified, the fully qualified Pod hostname will be "<hostname>.<subdomain>.<pod namespace>.svc.<cluster domain>".
          If not specified, the pod will not have a domainname at all.
          +optional
        type: string
      terminationGracePeriodSeconds:
        description: |-
          Optional duration in seconds the pod needs to terminate gracefully. May be decreased in delete request.
          Value must be non-negative integer. The value zero indicates stop immediately via
          the kill signal (no opportunity to shut down).
          If this value is nil, the default grace period will be used instead.
          The grace period is the duration in seconds after the processes running in the pod are sent
          a termination signal and the time when the processes are forcibly halted with a kill signal.
          Set this value longer than the expected cleanup time for your process.
          Defaults to 30 seconds.
          +optional
        type: integer
      tolerations:
        description: |-
          If specified, the pod's tolerations.
          +optional
        items:
          $ref: '#/definitions/v1.Toleration'
        type: array
      topologySpreadConstraints:
        description: |-
          TopologySpreadConstraints describes how a group of pods ought to spread across topology
          domains. Scheduler will schedule pods in a way which abides by the constraints.
          All topologySpreadConstraints are ANDed.
          +optional
          +patchMergeKey=topologyKey
          +patchStrategy=merge
          +listType=map
          +listMapKey=topologyKey
          +listMapKey=whenUnsatisfiable
        items:
          $ref: '#/definitions/v1.TopologySpreadConstraint'
        type: array
      volumes:
        description: |-
          List of volumes that can be mounted by containers belonging to the pod.
          More info: https://kubernetes.io/docs/concepts/storage/volumes
          +optional
          +patchMergeKey=name
          +patchStrategy=merge,retainKeys
        items:
          $ref: '#/definitions/v1.Volume'
        type: array
    type: object
  v1.PodTemplateSpec:
    properties:
      metadata:
        allOf:
        - $ref: '#/definitions/v1.ObjectMeta'
        description: |-
          Standard object's metadata.
          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
          +optional
      spec:
        allOf:
        - $ref: '#/definitions/v1.PodSpec'
        description: |-
          Specification of the desired behavior of the pod.
          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
          +optional
    type: object
  v1.PortStatus:
    properties:
      error:
        description: |-
          Error is to record the problem with the service port
          The format of the error shall comply with the following rules:
          - built-in error values shall be specified in this file and those shall use
            CamelCase names
          - cloud provider specific error values must have names that comply with the
            format foo.example.com/CamelCase.
          ---
          The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
          +optional
          +kubebuilder:validation:Required
          +kubebuilder:validation:Pattern=`^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$`
          +kubebuilder:validation:MaxLength=316
        type: string
      port:
        description: Port is the port number of the service port of which status is
          recorded here
        type: integer
      protocol:
        allOf:
        - $ref: '#/definitions/v1.Protocol'
        description: |-
          Protocol is the protocol of the service port of which status is recorded here
          The supported values are: "TCP", "UDP", "SCTP"
    type: object
  v1.PortworxVolumeSource:
    properties:
      fsType:
        description: |-
          FSType represents the filesystem type to mount
          Must be a filesystem type supported by the host operating system.
          Ex. "ext4", "xfs". Implicitly inferred to be "ext4" if unspecified.
        type: string
      readOnly:
        description: |-
          Defaults to false (read/write). ReadOnly here will force
          the ReadOnly setting in VolumeMounts.
          +optional
        type: boolean
      volumeID:
        description: VolumeID uniquely identifies a Portworx volume
        type: string
    type: object
  v1.PreemptionPolicy:
    enum:
    - PreemptLowerPriority
    - Never
    type: string
    x-enum-varnames:
    - PreemptLowerPriority
    - PreemptNever
  v1.PreferredSchedulingTerm:
    properties:
      preference:
        allOf:
        - $ref: '#/definitions/v1.NodeSelectorTerm'
        description: A node selector term, associated with the corresponding weight.
      weight:
        description: Weight associated with matching the corresponding nodeSelectorTerm,
          in the range 1-100.
        type: integer
    type: object
  v1.Probe:
    properties:
      exec:
        allOf:
        - $ref: '#/definitions/v1.ExecAction'
        description: |-
          One and only one of the following should be specified.
          Exec specifies the action to take.
          +optional
      failureThreshold:
        description: |-
          Minimum consecutive failures for the probe to be considered failed after having succeeded.
          Defaults to 3. Minimum value is 1.
          +optional
        type: integer
      httpGet:
        allOf:
        - $ref: '#/definitions/v1.HTTPGetAction'
        description: |-
          HTTPGet specifies the http request to perform.
          +optional
      initialDelaySeconds:
        description: |-
          Number of seconds after the container has started before liveness probes are initiated.
          More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
          +optional
        type: integer
      periodSeconds:
        description: |-
          How often (in seconds) to perform the probe.
          Default to 10 seconds. Minimum value is 1.
          +optional
        type: integer
      successThreshold:
        description: |-
          Minimum consecutive successes for the probe to be considered successful after having failed.
          Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
          +optional
        type: integer
      tcpSocket:
        allOf:
        - $ref: '#/definitions/v1.TCPSocketAction'
        description: |-
          TCPSocket specifies an action involving a TCP port.
          TCP hooks not yet supported
          TODO: implement a realistic TCP lifecycle hook
          +optional
      terminationGracePeriodSeconds:
        description: |-
          Optional duration in seconds the pod needs to terminate gracefully upon probe failure.
          The grace period is the duration in seconds after the processes running in the pod are sent
          a termination signal and the time when the processes are forcibly halted with a kill signal.
          Set this value longer than the expected cleanup time for your process.
          If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this
          value overrides the value provided by the pod spec.
          Value must be non-negative integer. The value zero indicates stop immediately via
          the kill signal (no opportunity to shut down).
          This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.
          Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
          +optional
        type: integer
      timeoutSeconds:
        description: |-
          Number of seconds after which the probe times out.
          Defaults to 1 second. Minimum value is 1.
          More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
          +optional
        type: integer
    type: object
  v1.ProcMountType:
    enum:
    - Default
    - Unmasked
    type: string
    x-enum-varnames:
    - DefaultProcMount
    - UnmaskedProcMount
  v1.ProjectedVolumeSource:
    properties:
      defaultMode:
        description: |-
          Mode bits used to set permissions on created files by default.
          Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
          YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
          Directories within the path are not affected by this setting.
          This might be in conflict with other options that affect the file
          mode, like fsGroup, and the result can be other mode bits set.
          +optional
        type: integer
      sources:
        description: |-
          list of volume projections
          +optional
        items:
          $ref: '#/definitions/v1.VolumeProjection'
        type: array
    type: object
  v1.Protocol:
    enum:
    - TCP
    - UDP
    - SCTP
    type: string
    x-enum-varnames:
    - ProtocolTCP
    - ProtocolUDP
    - ProtocolSCTP
  v1.PullPolicy:
    enum:
    - Always
    - Never
    - IfNotPresent
    type: string
    x-enum-varnames:
    - PullAlways
    - PullNever
    - PullIfNotPresent
  v1.QuobyteVolumeSource:
    properties:
      group:
        description: |-
          Group to map volume access to
          Default is no group
          +optional
        type: string
      readOnly:
        description: |-
          ReadOnly here will force the Quobyte volume to be mounted with read-only permissions.
          Defaults to false.
          +optional
        type: boolean
      registry:
        description: |-
          Registry represents a single or multiple Quobyte Registry services
          specified as a string as host:port pair (multiple entries are separated with commas)
          which acts as the central registry for volumes
        type: string
      tenant:
        description: |-
          Tenant owning the given Quobyte volume in the Backend
          Used with dynamically provisioned Quobyte volumes, value is set by the plugin
          +optional
        type: string
      user:
        description: |-
          User to map volume access to
          Defaults to serivceaccount user
          +optional
        type: string
      volume:
        description: Volume is a string that references an already created Quobyte
          volume by name.
        type: string
    type: object
  v1.RBDVolumeSource:
    properties:
      fsType:
        description: |-
          Filesystem type of the volume that you want to mount.
          Tip: Ensure that the filesystem type is supported by the host operating system.
          Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
          More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd
          TODO: how do we prevent errors in the filesystem from compromising the machine
          +optional
        type: string
      image:
        description: |-
          The rados image name.
          More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
        type: string
      keyring:
        description: |-
          Keyring is the path to key ring for RBDUser.
          Default is /etc/ceph/keyring.
          More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
          +optional
        type: string
      monitors:
        description: |-
          A collection of Ceph monitors.
          More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
        items:
          type: string
        type: array
      pool:
        description: |-
          The rados pool name.
          Default is rbd.
          More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
          +optional
        type: string
      readOnly:
        description: |-
          ReadOnly here will force the ReadOnly setting in VolumeMounts.
          Defaults to false.
          More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
          +optional
        type: boolean
      secretRef:
        allOf:
        - $ref: '#/definitions/v1.LocalObjectReference'
        description: |-
          SecretRef is name of the authentication secret for RBDUser. If provided
          overrides keyring.
          Default is nil.
          More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
          +optional
      user:
        description: |-
          The rados user name.
          Default is admin.
          More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
          +optional
        type: string
    type: object
  v1.ResourceFieldSelector:
    properties:
      containerName:
        description: |-
          Container name: required for volumes, optional for env vars
          +optional
        type: string
      divisor:
        allOf:
        - $ref: '#/definitions/resource.Quantity'
        description: |-
          Specifies the output format of the exposed resources, defaults to "1"
          +optional
      resource:
        description: 'Required: resource to select'
        type: string
    type: object
  v1.ResourceList:
    additionalProperties:
      $ref: '#/definitions/resource.Quantity'
    type: object
  v1.ResourceRequirements:
    properties:
      limits:
        allOf:
        - $ref: '#/definitions/v1.ResourceList'
        description: |-
          Limits describes the maximum amount of compute resources allowed.
          More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
          +optional
      requests:
        allOf:
        - $ref: '#/definitions/v1.ResourceList'
        description: |-
          Requests describes the minimum amount of compute resources required.
          If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
          otherwise to an implementation-defined value.
          More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
          +optional
    type: object
  v1.RestartPolicy:
    enum:
    - Always
    - OnFailure
    - Never
    type: string
    x-enum-varnames:
    - RestartPolicyAlways
    - RestartPolicyOnFailure
    - RestartPolicyNever
  v1.RollingUpdateDeployment:
    properties:
      maxSurge:
        allOf:
        - $ref: '#/definitions/intstr.IntOrString'
        description: |-
          The maximum number of pods that can be scheduled above the desired number of
          pods.
          Value can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%).
          This can not be 0 if MaxUnavailable is 0.
          Absolute number is calculated from percentage by rounding up.
          Defaults to 25%.
          Example: when this is set to 30%, the new ReplicaSet can be scaled up immediately when
          the rolling update starts, such that the total number of old and new pods do not exceed
          130% of desired pods. Once old pods have been killed,
          new ReplicaSet can be scaled up further, ensuring that total number of pods running
          at any time during the update is at most 130% of desired pods.
          +optional
      maxUnavailable:
        allOf:
        - $ref: '#/definitions/intstr.IntOrString'
        description: |-
          The maximum number of pods that can be unavailable during the update.
          Value can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%).
          Absolute number is calculated from percentage by rounding down.
          This can not be 0 if MaxSurge is 0.
          Defaults to 25%.
          Example: when this is set to 30%, the old ReplicaSet can be scaled down to 70% of desired pods
          immediately when the rolling update starts. Once new pods are ready, old ReplicaSet
          can be scaled down further, followed by scaling up the new ReplicaSet, ensuring
          that the total number of pods available at all times during the update is at
          least 70% of desired pods.
          +optional
    type: object
  v1.SELinuxOptions:
    properties:
      level:
        description: |-
          Level is SELinux level label that applies to the container.
          +optional
        type: string
      role:
        description: |-
          Role is a SELinux role label that applies to the container.
          +optional
        type: string
      type:
        description: |-
          Type is a SELinux type label that applies to the container.
          +optional
        type: string
      user:
        description: |-
          User is a SELinux user label that applies to the container.
          +optional
        type: string
    type: object
  v1.ScaleIOVolumeSource:
    properties:
      fsType:
        description: |-
          Filesystem type to mount.
          Must be a filesystem type supported by the host operating system.
          Ex. "ext4", "xfs", "ntfs".
          Default is "xfs".
          +optional
        type: string
      gateway:
        description: The host address of the ScaleIO API Gateway.
        type: string
      protectionDomain:
        description: |-
          The name of the ScaleIO Protection Domain for the configured storage.
          +optional
        type: string
      readOnly:
        description: |-
          Defaults to false (read/write). ReadOnly here will force
          the ReadOnly setting in VolumeMounts.
          +optional
        type: boolean
      secretRef:
        allOf:
        - $ref: '#/definitions/v1.LocalObjectReference'
        description: |-
          SecretRef references to the secret for ScaleIO user and other
          sensitive information. If this is not provided, Login operation will fail.
      sslEnabled:
        description: |-
          Flag to enable/disable SSL communication with Gateway, default false
          +optional
        type: boolean
      storageMode:
        description: |-
          Indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned.
          Default is ThinProvisioned.
          +optional
        type: string
      storagePool:
        description: |-
          The ScaleIO Storage Pool associated with the protection domain.
          +optional
        type: string
      system:
        description: The name of the storage system as configured in ScaleIO.
        type: string
      volumeName:
        description: |-
          The name of a volume already created in the ScaleIO system
          that is associated with this volume source.
        type: string
    type: object
  v1.SeccompProfile:
    properties:
      localhostProfile:
        description: |-
          localhostProfile indicates a profile defined in a file on the node should be used.
          The profile must be preconfigured on the node to work.
          Must be a descending path, relative to the kubelet's configured seccomp profile location.
          Must only be set if type is "Localhost".
          +optional
        type: string
      type:
        allOf:
        - $ref: '#/definitions/v1.SeccompProfileType'
        description: |-
          type indicates which kind of seccomp profile will be applied.
          Valid options are:

          Localhost - a profile defined in a file on the node should be used.
          RuntimeDefault - the container runtime default profile should be used.
          Unconfined - no profile should be applied.
          +unionDiscriminator
    type: object
  v1.SeccompProfileType:
    enum:
    - Unconfined
    - RuntimeDefault
    - Localhost
    type: string
    x-enum-varnames:
    - SeccompProfileTypeUnconfined
    - SeccompProfileTypeRuntimeDefault
    - SeccompProfileTypeLocalhost
  v1.SecretEnvSource:
    properties:
      name:
        description: |-
          Name of the referent.
          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
          TODO: Add other useful fields. apiVersion, kind, uid?
          +optional
        type: string
      optional:
        description: |-
          Specify whether the Secret must be defined
          +optional
        type: boolean
    type: object
  v1.SecretKeySelector:
    properties:
      key:
        description: The key of the secret to select from.  Must be a valid secret
          key.
        type: string
      name:
        description: |-
          Name of the referent.
          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
          TODO: Add other useful fields. apiVersion, kind, uid?
          +optional
        type: string
      optional:
        description: |-
          Specify whether the Secret or its key must be defined
          +optional
        type: boolean
    type: object
  v1.SecretProjection:
    properties:
      items:
        description: |-
          If unspecified, each key-value pair in the Data field of the referenced
          Secret will be projected into the volume as a file whose name is the
          key and content is the value. If specified, the listed keys will be
          projected into the specified paths, and unlisted keys will not be
          present. If a key is specified which is not present in the Secret,
          the volume setup will error unless it is marked optional. Paths must be
          relative and may not contain the '..' path or start with '..'.
          +optional
        items:
          $ref: '#/definitions/v1.KeyToPath'
        type: array
      name:
        description: |-
          Name of the referent.
          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
          TODO: Add other useful fields. apiVersion, kind, uid?
          +optional
        type: string
      optional:
        description: |-
          Specify whether the Secret or its key must be defined
          +optional
        type: boolean
    type: object
  v1.SecretVolumeSource:
    properties:
      defaultMode:
        description: |-
          Optional: mode bits used to set permissions on created files by default.
          Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
          YAML accepts both octal and decimal values, JSON requires decimal values
          for mode bits. Defaults to 0644.
          Directories within the path are not affected by this setting.
          This might be in conflict with other options that affect the file
          mode, like fsGroup, and the result can be other mode bits set.
          +optional
        type: integer
      items:
        description: |-
          If unspecified, each key-value pair in the Data field of the referenced
          Secret will be projected into the volume as a file whose name is the
          key and content is the value. If specified, the listed keys will be
          projected into the specified paths, and unlisted keys will not be
          present. If a key is specified which is not present in the Secret,
          the volume setup will error unless it is marked optional. Paths must be
          relative and may not contain the '..' path or start with '..'.
          +optional
        items:
          $ref: '#/definitions/v1.KeyToPath'
        type: array
      optional:
        description: |-
          Specify whether the Secret or its keys must be defined
          +optional
        type: boolean
      secretName:
        description: |-
          Name of the secret in the pod's namespace to use.
          More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
          +optional
        type: string
    type: object
  v1.SecurityContext:
    properties:
      allowPrivilegeEscalation:
        description: |-
          AllowPrivilegeEscalation controls whether a process can gain more
          privileges than its parent process. This bool directly controls if
          the no_new_privs flag will be set on the container process.
          AllowPrivilegeEscalation is true always when the container is:
          1) run as Privileged
          2) has CAP_SYS_ADMIN
          +optional
        type: boolean
      capabilities:
        allOf:
        - $ref: '#/definitions/v1.Capabilities'
        description: |-
          The capabilities to add/drop when running containers.
          Defaults to the default set of capabilities granted by the container runtime.
          +optional
      privileged:
        description: |-
          Run container in privileged mode.
          Processes in privileged containers are essentially equivalent to root on the host.
          Defaults to false.
          +optional
        type: boolean
      procMount:
        allOf:
        - $ref: '#/definitions/v1.ProcMountType'
        description: |-
          procMount denotes the type of proc mount to use for the containers.
          The default is DefaultProcMount which uses the container runtime defaults for
          readonly paths and masked paths.
          This requires the ProcMountType feature flag to be enabled.
          +optional
      readOnlyRootFilesystem:
        description: |-
          Whether this container has a read-only root filesystem.
          Default is false.
          +optional
        type: boolean
      runAsGroup:
        description: |-
          The GID to run the entrypoint of the container process.
          Uses runtime default if unset.
          May also be set in PodSecurityContext.  If set in both SecurityContext and
          PodSecurityContext, the value specified in SecurityContext takes precedence.
          +optional
        type: integer
      runAsNonRoot:
        description: |-
          Indicates that the container must run as a non-root user.
          If true, the Kubelet will validate the image at runtime to ensure that it
          does not run as UID 0 (root) and fail to start the container if it does.
          If unset or false, no such validation will be performed.
          May also be set in PodSecurityContext.  If set in both SecurityContext and
          PodSecurityContext, the value specified in SecurityContext takes precedence.
          +optional
        type: boolean
      runAsUser:
        description: |-
          The UID to run the entrypoint of the container process.
          Defaults to user specified in image metadata if unspecified.
          May also be set in PodSecurityContext.  If set in both SecurityContext and
          PodSecurityContext, the value specified in SecurityContext takes precedence.
          +optional
        type: integer
      seLinuxOptions:
        allOf:
        - $ref: '#/definitions/v1.SELinuxOptions'
        description: |-
          The SELinux context to be applied to the container.
          If unspecified, the container runtime will allocate a random SELinux context for each
          container.  May also be set in PodSecurityContext.  If set in both SecurityContext and
          PodSecurityContext, the value specified in SecurityContext takes precedence.
          +optional
      seccompProfile:
        allOf:
        - $ref: '#/definitions/v1.SeccompProfile'
        description: |-
          The seccomp options to use by this container. If seccomp options are
          provided at both the pod & container level, the container options
          override the pod options.
          +optional
      windowsOptions:
        allOf:
        - $ref: '#/definitions/v1.WindowsSecurityContextOptions'
        description: |-
          The Windows specific settings applied to all containers.
          If unspecified, the options from the PodSecurityContext will be used.
          If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
          +optional
    type: object
  v1.Service:
    properties:
      apiVersion:
        description: |-
          APIVersion defines the versioned schema of this representation of an object.
          Servers should convert recognized schemas to the latest internal value, and
          may reject unrecognized values.
          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
          +optional
        type: string
      kind:
        description: |-
          Kind is a string value representing the REST resource this object represents.
          Servers may infer this from the endpoint the client submits requests to.
          Cannot be updated.
          In CamelCase.
          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
          +optional
        type: string
      metadata:
        allOf:
        - $ref: '#/definitions/v1.ObjectMeta'
        description: |-
          Standard object's metadata.
          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
          +optional
      spec:
        allOf:
        - $ref: '#/definitions/v1.ServiceSpec'
        description: |-
          Spec defines the behavior of a service.
          https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
          +optional
      status:
        allOf:
        - $ref: '#/definitions/v1.ServiceStatus'
        description: |-
          Most recently observed status of the service.
          Populated by the system.
          Read-only.
          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
          +optional
    type: object
  v1.ServiceAccountTokenProjection:
    properties:
      audience:
        description: |-
          Audience is the intended audience of the token. A recipient of a token
          must identify itself with an identifier specified in the audience of the
          token, and otherwise should reject the token. The audience defaults to the
          identifier of the apiserver.
          +optional
        type: string
      expirationSeconds:
        description: |-
          ExpirationSeconds is the requested duration of validity of the service
          account token. As the token approaches expiration, the kubelet volume
          plugin will proactively rotate the service account token. The kubelet will
          start trying to rotate the token if the token is older than 80 percent of
          its time to live or if the token is older than 24 hours.Defaults to 1 hour
          and must be at least 10 minutes.
          +optional
        type: integer
      path:
        description: |-
          Path is the path relative to the mount point of the file to project the
          token into.
        type: string
    type: object
  v1.ServiceAffinity:
    enum:
    - ClientIP
    - None
    type: string
    x-enum-varnames:
    - ServiceAffinityClientIP
    - ServiceAffinityNone
  v1.ServiceExternalTrafficPolicyType:
    enum:
    - Local
    - Cluster
    type: string
    x-enum-varnames:
    - ServiceExternalTrafficPolicyTypeLocal
    - ServiceExternalTrafficPolicyTypeCluster
  v1.ServiceInternalTrafficPolicyType:
    enum:
    - Cluster
    - Local
    type: string
    x-enum-varnames:
    - ServiceInternalTrafficPolicyCluster
    - ServiceInternalTrafficPolicyLocal
  v1.ServicePort:
    properties:
      appProtocol:
        description: |-
          The application protocol for this port.
          This field follows standard Kubernetes label syntax.
          Un-prefixed names are reserved for IANA standard service names (as per
          RFC-6335 and http://www.iana.org/assignments/service-names).
          Non-standard protocols should use prefixed names such as
          mycompany.com/my-custom-protocol.
          +optional
        type: string
      name:
        description: |-
          The name of this port within the service. This must be a DNS_LABEL.
          All ports within a ServiceSpec must have unique names. When considering
          the endpoints for a Service, this must match the 'name' field in the
          EndpointPort.
          Optional if only one ServicePort is defined on this service.
          +optional
        type: string
      nodePort:
        description: |-
          The port on each node on which this service is exposed when type is
          NodePort or LoadBalancer.  Usually assigned by the system. If a value is
          specified, in-range, and not in use it will be used, otherwise the
          operation will fail.  If not specified, a port will be allocated if this
          Service requires one.  If this field is specified when creating a
          Service which does not need it, creation will fail. This field will be
          wiped when updating a Service to no longer need it (e.g. changing type
          from NodePort to ClusterIP).
          More info: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport
          +optional
        type: integer
      port:
        description: The port that will be exposed by this service.
        type: integer
      protocol:
        allOf:
        - $ref: '#/definitions/v1.Protocol'
        description: |-
          The IP protocol for this port. Supports "TCP", "UDP", and "SCTP".
          Default is TCP.
          +default="TCP"
          +optional
      targetPort:
        allOf:
        - $ref: '#/definitions/intstr.IntOrString'
        description: |-
          Number or name of the port to access on the pods targeted by the service.
          Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
          If this is a string, it will be looked up as a named port in the
          target Pod's container ports. If this is not specified, the value
          of the 'port' field is used (an identity map).
          This field is ignored for services with clusterIP=None, and should be
          omitted or set equal to the 'port' field.
          More info: https://kubernetes.io/docs/concepts/services-networking/service/#defining-a-service
          +optional
    type: object
  v1.ServiceSpec:
    properties:
      allocateLoadBalancerNodePorts:
        description: |-
          allocateLoadBalancerNodePorts defines if NodePorts will be automatically
          allocated for services with type LoadBalancer.  Default is "true". It
          may be set to "false" if the cluster load-balancer does not rely on
          NodePorts.  If the caller requests specific NodePorts (by specifying a
          value), those requests will be respected, regardless of this field.
          This field may only be set for services with type LoadBalancer and will
          be cleared if the type is changed to any other type.
          This field is beta-level and is only honored by servers that enable the ServiceLBNodePortControl feature.
          +featureGate=ServiceLBNodePortControl
          +optional
        type: boolean
      clusterIP:
        description: |-
          clusterIP is the IP address of the service and is usually assigned
          randomly. If an address is specified manually, is in-range (as per
          system configuration), and is not in use, it will be allocated to the
          service; otherwise creation of the service will fail. This field may not
          be changed through updates unless the type field is also being changed
          to ExternalName (which requires this field to be blank) or the type
          field is being changed from ExternalName (in which case this field may
          optionally be specified, as describe above).  Valid values are "None",
          empty string (""), or a valid IP address. Setting this to "None" makes a
          "headless service" (no virtual IP), which is useful when direct endpoint
          connections are preferred and proxying is not required.  Only applies to
          types ClusterIP, NodePort, and LoadBalancer. If this field is specified
          when creating a Service of type ExternalName, creation will fail. This
          field will be wiped when updating a Service to type ExternalName.
          More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
          +optional
        type: string
      clusterIPs:
        description: |-
          ClusterIPs is a list of IP addresses assigned to this service, and are
          usually assigned randomly.  If an address is specified manually, is
          in-range (as per system configuration), and is not in use, it will be
          allocated to the service; otherwise creation of the service will fail.
          This field may not be changed through updates unless the type field is
          also being changed to ExternalName (which requires this field to be
          empty) or the type field is being changed from ExternalName (in which
          case this field may optionally be specified, as describe above).  Valid
          values are "None", empty string (""), or a valid IP address.  Setting
          this to "None" makes a "headless service" (no virtual IP), which is
          useful when direct endpoint connections are preferred and proxying is
          not required.  Only applies to types ClusterIP, NodePort, and
          LoadBalancer. If this field is specified when creating a Service of type
          ExternalName, creation will fail. This field will be wiped when updating
          a Service to type ExternalName.  If this field is not specified, it will
          be initialized from the clusterIP field.  If this field is specified,
          clients must ensure that clusterIPs[0] and clusterIP have the same
          value.

          Unless the "IPv6DualStack" feature gate is enabled, this field is
          limited to one value, which must be the same as the clusterIP field.  If
          the feature gate is enabled, this field may hold a maximum of two
          entries (dual-stack IPs, in either order).  These IPs must correspond to
          the values of the ipFamilies field. Both clusterIPs and ipFamilies are
          governed by the ipFamilyPolicy field.
          More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
          +listType=atomic
          +optional
        items:
          type: string
        type: array
      externalIPs:
        description: |-
          externalIPs is a list of IP addresses for which nodes in the cluster
          will also accept traffic for this service.  These IPs are not managed by
          Kubernetes.  The user is responsible for ensuring that traffic arrives
          at a node with this IP.  A common example is external load-balancers
          that are not part of the Kubernetes system.
          +optional
        items:
          type: string
        type: array
      externalName:
        description: |-
          externalName is the external reference that discovery mechanisms will
          return as an alias for this service (e.g. a DNS CNAME record). No
          proxying will be involved.  Must be a lowercase RFC-1123 hostname
          (https://tools.ietf.org/html/rfc1123) and requires `type` to be "ExternalName".
          +optional
        type: string
      externalTrafficPolicy:
        allOf:
        - $ref: '#/definitions/v1.ServiceExternalTrafficPolicyType'
        description: |-
          externalTrafficPolicy denotes if this Service desires to route external
          traffic to node-local or cluster-wide endpoints. "Local" preserves the
          client source IP and avoids a second hop for LoadBalancer and Nodeport
          type services, but risks potentially imbalanced traffic spreading.
          "Cluster" obscures the client source IP and may cause a second hop to
          another node, but should have good overall load-spreading.
          +optional
      healthCheckNodePort:
        description: |-
          healthCheckNodePort specifies the healthcheck nodePort for the service.
          This only applies when type is set to LoadBalancer and
          externalTrafficPolicy is set to Local. If a value is specified, is
          in-range, and is not in use, it will be used.  If not specified, a value
          will be automatically allocated.  External systems (e.g. load-balancers)
          can use this port to determine if a given node holds endpoints for this
          service or not.  If this field is specified when creating a Service
          which does not need it, creation will fail. This field will be wiped
          when updating a Service to no longer need it (e.g. changing type).
          +optional
        type: integer
      internalTrafficPolicy:
        allOf:
        - $ref: '#/definitions/v1.ServiceInternalTrafficPolicyType'
        description: |-
          InternalTrafficPolicy specifies if the cluster internal traffic
          should be routed to all endpoints or node-local endpoints only.
          "Cluster" routes internal traffic to a Service to all endpoints.
          "Local" routes traffic to node-local endpoints only, traffic is
          dropped if no node-local endpoints are ready.
          The default value is "Cluster".
          +featureGate=ServiceInternalTrafficPolicy
          +optional
      ipFamilies:
        description: |-
          IPFamilies is a list of IP families (e.g. IPv4, IPv6) assigned to this
          service, and is gated by the "IPv6DualStack" feature gate.  This field
          is usually assigned automatically based on cluster configuration and the
          ipFamilyPolicy field. If this field is specified manually, the requested
          family is available in the cluster, and ipFamilyPolicy allows it, it
          will be used; otherwise creation of the service will fail.  This field
          is conditionally mutable: it allows for adding or removing a secondary
          IP family, but it does not allow changing the primary IP family of the
          Service.  Valid values are "IPv4" and "IPv6".  This field only applies
          to Services of types ClusterIP, NodePort, and LoadBalancer, and does
          apply to "headless" services.  This field will be wiped when updating a
          Service to type ExternalName.

          This field may hold a maximum of two entries (dual-stack families, in
          either order).  These families must correspond to the values of the
          clusterIPs field, if specified. Both clusterIPs and ipFamilies are
          governed by the ipFamilyPolicy field.
          +listType=atomic
          +optional
        items:
          $ref: '#/definitions/v1.IPFamily'
        type: array
      ipFamilyPolicy:
        allOf:
        - $ref: '#/definitions/v1.IPFamilyPolicyType'
        description: |-
          IPFamilyPolicy represents the dual-stack-ness requested or required by
          this Service, and is gated by the "IPv6DualStack" feature gate.  If
          there is no value provided, then this field will be set to SingleStack.
          Services can be "SingleStack" (a single IP family), "PreferDualStack"
          (two IP families on dual-stack configured clusters or a single IP family
          on single-stack clusters), or "RequireDualStack" (two IP families on
          dual-stack configured clusters, otherwise fail). The ipFamilies and
          clusterIPs fields depend on the value of this field.  This field will be
          wiped when updating a service to type ExternalName.
          +optional
      loadBalancerClass:
        description: |-
          loadBalancerClass is the class of the load balancer implementation this Service belongs to.
          If specified, the value of this field must be a label-style identifier, with an optional prefix,
          e.g. "internal-vip" or "example.com/internal-vip". Unprefixed names are reserved for end-users.
          This field can only be set when the Service type is 'LoadBalancer'. If not set, the default load
          balancer implementation is used, today this is typically done through the cloud provider integration,
          but should apply for any default implementation. If set, it is assumed that a load balancer
          implementation is watching for Services with a matching class. Any default load balancer
          implementation (e.g. cloud providers) should ignore Services that set this field.
          This field can only be set when creating or updating a Service to type 'LoadBalancer'.
          Once set, it can not be changed. This field will be wiped when a service is updated to a non 'LoadBalancer' type.
          +featureGate=LoadBalancerClass
          +optional
        type: string
      loadBalancerIP:
        description: |-
          Only applies to Service Type: LoadBalancer
          LoadBalancer will get created with the IP specified in this field.
          This feature depends on whether the underlying cloud-provider supports specifying
          the loadBalancerIP when a load balancer is created.
          This field will be ignored if the cloud-provider does not support the feature.
          +optional
        type: string
      loadBalancerSourceRanges:
        description: |-
          If specified and supported by the platform, this will restrict traffic through the cloud-provider
          load-balancer will be restricted to the specified client IPs. This field will be ignored if the
          cloud-provider does not support the feature."
          More info: https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/
          +optional
        items:
          type: string
        type: array
      ports:
        description: |-
          The list of ports that are exposed by this service.
          More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
          +patchMergeKey=port
          +patchStrategy=merge
          +listType=map
          +listMapKey=port
          +listMapKey=protocol
        items:
          $ref: '#/definitions/v1.ServicePort'
        type: array
      publishNotReadyAddresses:
        description: |-
          publishNotReadyAddresses indicates that any agent which deals with endpoints for this
          Service should disregard any indications of ready/not-ready.
          The primary use case for setting this field is for a StatefulSet's Headless Service to
          propagate SRV DNS records for its Pods for the purpose of peer discovery.
          The Kubernetes controllers that generate Endpoints and EndpointSlice resources for
          Services interpret this to mean that all endpoints are considered "ready" even if the
          Pods themselves are not. Agents which consume only Kubernetes generated endpoints
          through the Endpoints or EndpointSlice resources can safely assume this behavior.
          +optional
        type: boolean
      selector:
        additionalProperties:
          type: string
        description: |-
          Route service traffic to pods with label keys and values matching this
          selector. If empty or not present, the service is assumed to have an
          external process managing its endpoints, which Kubernetes will not
          modify. Only applies to types ClusterIP, NodePort, and LoadBalancer.
          Ignored if type is ExternalName.
          More info: https://kubernetes.io/docs/concepts/services-networking/service/
          +optional
          +mapType=atomic
        type: object
      sessionAffinity:
        allOf:
        - $ref: '#/definitions/v1.ServiceAffinity'
        description: |-
          Supports "ClientIP" and "None". Used to maintain session affinity.
          Enable client IP based session affinity.
          Must be ClientIP or None.
          Defaults to None.
          More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
          +optional
      sessionAffinityConfig:
        allOf:
        - $ref: '#/definitions/v1.SessionAffinityConfig'
        description: |-
          sessionAffinityConfig contains the configurations of session affinity.
          +optional
      type:
        allOf:
        - $ref: '#/definitions/v1.ServiceType'
        description: |-
          type determines how the Service is exposed. Defaults to ClusterIP. Valid
          options are ExternalName, ClusterIP, NodePort, and LoadBalancer.
          "ClusterIP" allocates a cluster-internal IP address for load-balancing
          to endpoints. Endpoints are determined by the selector or if that is not
          specified, by manual construction of an Endpoints object or
          EndpointSlice objects. If clusterIP is "None", no virtual IP is
          allocated and the endpoints are published as a set of endpoints rather
          than a virtual IP.
          "NodePort" builds on ClusterIP and allocates a port on every node which
          routes to the same endpoints as the clusterIP.
          "LoadBalancer" builds on NodePort and creates an external load-balancer
          (if supported in the current cloud) which routes to the same endpoints
          as the clusterIP.
          "ExternalName" aliases this service to the specified externalName.
          Several other fields do not apply to ExternalName services.
          More info: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
          +optional
    type: object
  v1.ServiceStatus:
    properties:
      conditions:
        description: |-
          Current service state
          +optional
          +patchMergeKey=type
          +patchStrategy=merge
          +listType=map
          +listMapKey=type
        items:
          $ref: '#/definitions/v1.Condition'
        type: array
      loadBalancer:
        allOf:
        - $ref: '#/definitions/v1.LoadBalancerStatus'
        description: |-
          LoadBalancer contains the current status of the load-balancer,
          if one is present.
          +optional
    type: object
  v1.ServiceType:
    enum:
    - ClusterIP
    - NodePort
    - LoadBalancer
    - ExternalName
    type: string
    x-enum-varnames:
    - ServiceTypeClusterIP
    - ServiceTypeNodePort
    - ServiceTypeLoadBalancer
    - ServiceTypeExternalName
  v1.SessionAffinityConfig:
    properties:
      clientIP:
        allOf:
        - $ref: '#/definitions/v1.ClientIPConfig'
        description: |-
          clientIP contains the configurations of Client IP based session affinity.
          +optional
    type: object
  v1.StorageMedium:
    enum:
    - ""
    - Memory
    - HugePages
    - HugePages-
    type: string
    x-enum-comments:
      StorageMediumDefault: use whatever the default is for the node, assume anything
        we don't explicitly handle is this
      StorageMediumHugePages: use hugepages
      StorageMediumHugePagesPrefix: prefix for full medium notation HugePages-<size>
      StorageMediumMemory: use memory (e.g. tmpfs on linux)
    x-enum-varnames:
    - StorageMediumDefault
    - StorageMediumMemory
    - StorageMediumHugePages
    - StorageMediumHugePagesPrefix
  v1.StorageOSVolumeSource:
    properties:
      fsType:
        description: |-
          Filesystem type to mount.
          Must be a filesystem type supported by the host operating system.
          Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
          +optional
        type: string
      readOnly:
        description: |-
          Defaults to false (read/write). ReadOnly here will force
          the ReadOnly setting in VolumeMounts.
          +optional
        type: boolean
      secretRef:
        allOf:
        - $ref: '#/definitions/v1.LocalObjectReference'
        description: |-
          SecretRef specifies the secret to use for obtaining the StorageOS API
          credentials.  If not specified, default values will be attempted.
          +optional
      volumeName:
        description: |-
          VolumeName is the human-readable name of the StorageOS volume.  Volume
          names are only unique within a namespace.
        type: string
      volumeNamespace:
        description: |-
          VolumeNamespace specifies the scope of the volume within StorageOS.  If no
          namespace is specified then the Pod's namespace will be used.  This allows the
          Kubernetes name scoping to be mirrored within StorageOS for tighter integration.
          Set VolumeName to any name to override the default behaviour.
          Set to "default" if you are not using namespaces within StorageOS.
          Namespaces that do not pre-exist within StorageOS will be created.
          +optional
        type: string
    type: object
  v1.Sysctl:
    properties:
      name:
        description: Name of a property to set
        type: string
      value:
        description: Value of a property to set
        type: string
    type: object
  v1.TCPSocketAction:
    properties:
      host:
        description: |-
          Optional: Host name to connect to, defaults to the pod IP.
          +optional
        type: string
      port:
        allOf:
        - $ref: '#/definitions/intstr.IntOrString'
        description: |-
          Number or name of the port to access on the container.
          Number must be in the range 1 to 65535.
          Name must be an IANA_SVC_NAME.
    type: object
  v1.TaintEffect:
    enum:
    - NoSchedule
    - PreferNoSchedule
    - NoExecute
    type: string
    x-enum-varnames:
    - TaintEffectNoSchedule
    - TaintEffectPreferNoSchedule
    - TaintEffectNoExecute
  v1.TerminationMessagePolicy:
    enum:
    - File
    - FallbackToLogsOnError
    type: string
    x-enum-varnames:
    - TerminationMessageReadFile
    - TerminationMessageFallbackToLogsOnError
  v1.Toleration:
    properties:
      effect:
        allOf:
        - $ref: '#/definitions/v1.TaintEffect'
        description: |-
          Effect indicates the taint effect to match. Empty means match all taint effects.
          When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
          +optional
      key:
        description: |-
          Key is the taint key that the toleration applies to. Empty means match all taint keys.
          If the key is empty, operator must be Exists; this combination means to match all values and all keys.
          +optional
        type: string
      operator:
        allOf:
        - $ref: '#/definitions/v1.TolerationOperator'
        description: |-
          Operator represents a key's relationship to the value.
          Valid operators are Exists and Equal. Defaults to Equal.
          Exists is equivalent to wildcard for value, so that a pod can
          tolerate all taints of a particular category.
          +optional
      tolerationSeconds:
        description: |-
          TolerationSeconds represents the period of time the toleration (which must be
          of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,
          it is not set, which means tolerate the taint forever (do not evict). Zero and
          negative values will be treated as 0 (evict immediately) by the system.
          +optional
        type: integer
      value:
        description: |-
          Value is the taint value the toleration matches to.
          If the operator is Exists, the value should be empty, otherwise just a regular string.
          +optional
        type: string
    type: object
  v1.TolerationOperator:
    enum:
    - Exists
    - Equal
    type: string
    x-enum-varnames:
    - TolerationOpExists
    - TolerationOpEqual
  v1.TopologySpreadConstraint:
    properties:
      labelSelector:
        allOf:
        - $ref: '#/definitions/v1.LabelSelector'
        description: |-
          LabelSelector is used to find matching pods.
          Pods that match this label selector are counted to determine the number of pods
          in their corresponding topology domain.
          +optional
      maxSkew:
        description: |-
          MaxSkew describes the degree to which pods may be unevenly distributed.
          When `whenUnsatisfiable=DoNotSchedule`, it is the maximum permitted difference
          between the number of matching pods in the target topology and the global minimum.
          For example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same
          labelSelector spread as 1/1/0:
          +-------+-------+-------+
          | zone1 | zone2 | zone3 |
          +-------+-------+-------+
          |   P   |   P   |       |
          +-------+-------+-------+
          - if MaxSkew is 1, incoming pod can only be scheduled to zone3 to become 1/1/1;
          scheduling it onto zone1(zone2) would make the ActualSkew(2-0) on zone1(zone2)
          violate MaxSkew(1).
          - if MaxSkew is 2, incoming pod can be scheduled onto any zone.
          When `whenUnsatisfiable=ScheduleAnyway`, it is used to give higher precedence
          to topologies that satisfy it.
          It's a required field. Default value is 1 and 0 is not allowed.
        type: integer
      topologyKey:
        description: |-
          TopologyKey is the key of node labels. Nodes that have a label with this key
          and identical values are considered to be in the same topology.
          We consider each <key, value> as a "bucket", and try to put balanced number
          of pods into each bucket.
          It's a required field.
        type: string
      whenUnsatisfiable:
        allOf:
        - $ref: '#/definitions/v1.UnsatisfiableConstraintAction'
        description: |-
          WhenUnsatisfiable indicates how to deal with a pod if it doesn't satisfy
          the spread constraint.
          - DoNotSchedule (default) tells the scheduler not to schedule it.
          - ScheduleAnyway tells the scheduler to schedule the pod in any location,
            but giving higher precedence to topologies that would help reduce the
            skew.
          A constraint is considered "Unsatisfiable" for an incoming pod
          if and only if every possible node assigment for that pod would violate
          "MaxSkew" on some topology.
          For example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same
          labelSelector spread as 3/1/1:
          +-------+-------+-------+
          | zone1 | zone2 | zone3 |
          +-------+-------+-------+
          | P P P |   P   |   P   |
          +-------+-------+-------+
          If WhenUnsatisfiable is set to DoNotSchedule, incoming pod can only be scheduled
          to zone2(zone3) to become 3/2/1(3/1/2) as ActualSkew(2-1) on zone2(zone3) satisfies
          MaxSkew(1). In other words, the cluster can still be imbalanced, but scheduler
          won't make it *more* imbalanced.
          It's a required field.
    type: object
  v1.TypedLocalObjectReference:
    properties:
      apiGroup:
        description: |-
          APIGroup is the group for the resource being referenced.
          If APIGroup is not specified, the specified Kind must be in the core API group.
          For any other third-party types, APIGroup is required.
          +optional
        type: string
      kind:
        description: Kind is the type of resource being referenced
        type: string
      name:
        description: Name is the name of resource being referenced
        type: string
    type: object
  v1.URIScheme:
    enum:
    - HTTP
    - HTTPS
    type: string
    x-enum-varnames:
    - URISchemeHTTP
    - URISchemeHTTPS
  v1.UnsatisfiableConstraintAction:
    enum:
    - DoNotSchedule
    - ScheduleAnyway
    type: string
    x-enum-varnames:
    - DoNotSchedule
    - ScheduleAnyway
  v1.Volume:
    properties:
      awsElasticBlockStore:
        allOf:
        - $ref: '#/definitions/v1.AWSElasticBlockStoreVolumeSource'
        description: |-
          AWSElasticBlockStore represents an AWS Disk resource that is attached to a
          kubelet's host machine and then exposed to the pod.
          More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
          +optional
      azureDisk:
        allOf:
        - $ref: '#/definitions/v1.AzureDiskVolumeSource'
        description: |-
          AzureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.
          +optional
      azureFile:
        allOf:
        - $ref: '#/definitions/v1.AzureFileVolumeSource'
        description: |-
          AzureFile represents an Azure File Service mount on the host and bind mount to the pod.
          +optional
      cephfs:
        allOf:
        - $ref: '#/definitions/v1.CephFSVolumeSource'
        description: |-
          CephFS represents a Ceph FS mount on the host that shares a pod's lifetime
          +optional
      cinder:
        allOf:
        - $ref: '#/definitions/v1.CinderVolumeSource'
        description: |-
          Cinder represents a cinder volume attached and mounted on kubelets host machine.
          More info: https://examples.k8s.io/mysql-cinder-pd/README.md
          +optional
      configMap:
        allOf:
        - $ref: '#/definitions/v1.ConfigMapVolumeSource'
        description: |-
          ConfigMap represents a configMap that should populate this volume
          +optional
      csi:
        allOf:
        - $ref: '#/definitions/v1.CSIVolumeSource'
        description: |-
          CSI (Container Storage Interface) represents ephemeral storage that is handled by certain external CSI drivers (Beta feature).
          +optional
      downwardAPI:
        allOf:
        - $ref: '#/definitions/v1.DownwardAPIVolumeSource'
        description: |-
          DownwardAPI represents downward API about the pod that should populate this volume
          +optional
      emptyDir:
        allOf:
        - $ref: '#/definitions/v1.EmptyDirVolumeSource'
        description: |-
          EmptyDir represents a temporary directory that shares a pod's lifetime.
          More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
          +optional
      ephemeral:
        allOf:
        - $ref: '#/definitions/v1.EphemeralVolumeSource'
        description: |-
          Ephemeral represents a volume that is handled by a cluster storage driver.
          The volume's lifecycle is tied to the pod that defines it - it will be created before the pod starts,
          and deleted when the pod is removed.

          Use this if:
          a) the volume is only needed while the pod runs,
          b) features of normal volumes like restoring from snapshot or capacity
             tracking are needed,
          c) the storage driver is specified through a storage class, and
          d) the storage driver supports dynamic volume provisioning through
             a PersistentVolumeClaim (see EphemeralVolumeSource for more
             information on the connection between this volume type
             and PersistentVolumeClaim).

          Use PersistentVolumeClaim or one of the vendor-specific
          APIs for volumes that persist for longer than the lifecycle
          of an individual pod.

          Use CSI for light-weight local ephemeral volumes if the CSI driver is meant to
          be used that way - see the documentation of the driver for
          more information.

          A pod can use both types of ephemeral volumes and
          persistent volumes at the same time.

          This is a beta feature and only available when the GenericEphemeralVolume
          feature gate is enabled.

          +optional
      fc:
        allOf:
        - $ref: '#/definitions/v1.FCVolumeSource'
        description: |-
          FC represents a Fibre Channel resource that is attached to a kubelet's host machine and then exposed to the pod.
          +optional
      flexVolume:
        allOf:
        - $ref: '#/definitions/v1.FlexVolumeSource'
        description: |-
          FlexVolume represents a generic volume resource that is
          provisioned/attached using an exec based plugin.
          +optional
      flocker:
        allOf:
        - $ref: '#/definitions/v1.FlockerVolumeSource'
        description: |-
          Flocker represents a Flocker volume attached to a kubelet's host machine. This depends on the Flocker control service being running
          +optional
      gcePersistentDisk:
        allOf:
        - $ref: '#/definitions/v1.GCEPersistentDiskVolumeSource'
        description: |-
          GCEPersistentDisk represents a GCE Disk resource that is attached to a
          kubelet's host machine and then exposed to the pod.
          More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
          +optional
      gitRepo:
        allOf:
        - $ref: '#/definitions/v1.GitRepoVolumeSource'
        description: |-
          GitRepo represents a git repository at a particular revision.
          DEPRECATED: GitRepo is deprecated. To provision a container with a git repo, mount an
          EmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir
          into the Pod's container.
          +optional
      glusterfs:
        allOf:
        - $ref: '#/definitions/v1.GlusterfsVolumeSource'
        description: |-
          Glusterfs represents a Glusterfs mount on the host that shares a pod's lifetime.
          More info: https://examples.k8s.io/volumes/glusterfs/README.md
          +optional
      hostPath:
        allOf:
        - $ref: '#/definitions/v1.HostPathVolumeSource'
        description: |-
          HostPath represents a pre-existing file or directory on the host
          machine that is directly exposed to the container. This is generally
          used for system agents or other privileged things that are allowed
          to see the host machine. Most containers will NOT need this.
          More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
          ---
          TODO(jonesdl) We need to restrict who can use host directory mounts and who can/can not
          mount host directories as read/write.
          +optional
      iscsi:
        allOf:
        - $ref: '#/definitions/v1.ISCSIVolumeSource'
        description: |-
          ISCSI represents an ISCSI Disk resource that is attached to a
          kubelet's host machine and then exposed to the pod.
          More info: https://examples.k8s.io/volumes/iscsi/README.md
          +optional
      name:
        description: |-
          Volume's name.
          Must be a DNS_LABEL and unique within the pod.
          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
        type: string
      nfs:
        allOf:
        - $ref: '#/definitions/v1.NFSVolumeSource'
        description: |-
          NFS represents an NFS mount on the host that shares a pod's lifetime
          More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
          +optional
      persistentVolumeClaim:
        allOf:
        - $ref: '#/definitions/v1.PersistentVolumeClaimVolumeSource'
        description: |-
          PersistentVolumeClaimVolumeSource represents a reference to a
          PersistentVolumeClaim in the same namespace.
          More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
          +optional
      photonPersistentDisk:
        allOf:
        - $ref: '#/definitions/v1.PhotonPersistentDiskVolumeSource'
        description: PhotonPersistentDisk represents a PhotonController persistent
          disk attached and mounted on kubelets host machine
      portworxVolume:
        allOf:
        - $ref: '#/definitions/v1.PortworxVolumeSource'
        description: |-
          PortworxVolume represents a portworx volume attached and mounted on kubelets host machine
          +optional
      projected:
        allOf:
        - $ref: '#/definitions/v1.ProjectedVolumeSource'
        description: Items for all in one resources secrets, configmaps, and downward
          API
      quobyte:
        allOf:
        - $ref: '#/definitions/v1.QuobyteVolumeSource'
        description: |-
          Quobyte represents a Quobyte mount on the host that shares a pod's lifetime
          +optional
      rbd:
        allOf:
        - $ref: '#/definitions/v1.RBDVolumeSource'
        description: |-
          RBD represents a Rados Block Device mount on the host that shares a pod's lifetime.
          More info: https://examples.k8s.io/volumes/rbd/README.md
          +optional
      scaleIO:
        allOf:
        - $ref: '#/definitions/v1.ScaleIOVolumeSource'
        description: |-
          ScaleIO represents a ScaleIO persistent volume attached and mounted on Kubernetes nodes.
          +optional
      secret:
        allOf:
        - $ref: '#/definitions/v1.SecretVolumeSource'
        description: |-
          Secret represents a secret that should populate this volume.
          More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
          +optional
      storageos:
        allOf:
        - $ref: '#/definitions/v1.StorageOSVolumeSource'
        description: |-
          StorageOS represents a StorageOS volume attached and mounted on Kubernetes nodes.
          +optional
      vsphereVolume:
        allOf:
        - $ref: '#/definitions/v1.VsphereVirtualDiskVolumeSource'
        description: |-
          VsphereVolume represents a vSphere volume attached and mounted on kubelets host machine
          +optional
    type: object
  v1.VolumeDevice:
    properties:
      devicePath:
        description: devicePath is the path inside of the container that the device
          will be mapped to.
        type: string
      name:
        description: name must match the name of a persistentVolumeClaim in the pod
        type: string
    type: object
  v1.VolumeMount:
    properties:
      mountPath:
        description: |-
          Path within the container at which the volume should be mounted.  Must
          not contain ':'.
        type: string
      mountPropagation:
        allOf:
        - $ref: '#/definitions/v1.MountPropagationMode'
        description: |-
          mountPropagation determines how mounts are propagated from the host
          to container and the other way around.
          When not set, MountPropagationNone is used.
          This field is beta in 1.10.
          +optional
      name:
        description: This must match the Name of a Volume.
        type: string
      readOnly:
        description: |-
          Mounted read-only if true, read-write otherwise (false or unspecified).
          Defaults to false.
          +optional
        type: boolean
      subPath:
        description: |-
          Path within the volume from which the container's volume should be mounted.
          Defaults to "" (volume's root).
          +optional
        type: string
      subPathExpr:
        description: |-
          Expanded path within the volume from which the container's volume should be mounted.
          Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment.
          Defaults to "" (volume's root).
          SubPathExpr and SubPath are mutually exclusive.
          +optional
        type: string
    type: object
  v1.VolumeProjection:
    properties:
      configMap:
        allOf:
        - $ref: '#/definitions/v1.ConfigMapProjection'
        description: |-
          information about the configMap data to project
          +optional
      downwardAPI:
        allOf:
        - $ref: '#/definitions/v1.DownwardAPIProjection'
        description: |-
          information about the downwardAPI data to project
          +optional
      secret:
        allOf:
        - $ref: '#/definitions/v1.SecretProjection'
        description: |-
          information about the secret data to project
          +optional
      serviceAccountToken:
        allOf:
        - $ref: '#/definitions/v1.ServiceAccountTokenProjection'
        description: |-
          information about the serviceAccountToken data to project
          +optional
    type: object
  v1.VsphereVirtualDiskVolumeSource:
    properties:
      fsType:
        description: |-
          Filesystem type to mount.
          Must be a filesystem type supported by the host operating system.
          Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
          +optional
        type: string
      storagePolicyID:
        description: |-
          Storage Policy Based Management (SPBM) profile ID associated with the StoragePolicyName.
          +optional
        type: string
      storagePolicyName:
        description: |-
          Storage Policy Based Management (SPBM) profile name.
          +optional
        type: string
      volumePath:
        description: Path that identifies vSphere volume vmdk
        type: string
    type: object
  v1.WeightedPodAffinityTerm:
    properties:
      podAffinityTerm:
        allOf:
        - $ref: '#/definitions/v1.PodAffinityTerm'
        description: Required. A pod affinity term, associated with the corresponding
          weight.
      weight:
        description: |-
          weight associated with matching the corresponding podAffinityTerm,
          in the range 1-100.
        type: integer
    type: object
  v1.WindowsSecurityContextOptions:
    properties:
      gmsaCredentialSpec:
        description: |-
          GMSACredentialSpec is where the GMSA admission webhook
          (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the
          GMSA credential spec named by the GMSACredentialSpecName field.
          +optional
        type: string
      gmsaCredentialSpecName:
        description: |-
          GMSACredentialSpecName is the name of the GMSA credential spec to use.
          +optional
        type: string
      hostProcess:
        description: |-
          HostProcess determines if a container should be run as a 'Host Process' container.
          This field is alpha-level and will only be honored by components that enable the
          WindowsHostProcessContainers feature flag. Setting this field without the feature
          flag will result in errors when validating the Pod. All of a Pod's containers must
          have the same effective HostProcess value (it is not allowed to have a mix of HostProcess
          containers and non-HostProcess containers).  In addition, if HostProcess is true
          then HostNetwork must also be set to true.
          +optional
        type: boolean
      runAsUserName:
        description: |-
          The UserName in Windows to run the entrypoint of the container process.
          Defaults to the user specified in image metadata if unspecified.
          May also be set in PodSecurityContext. If set in both SecurityContext and
          PodSecurityContext, the value specified in SecurityContext takes precedence.
          +optional
        type: string
    type: object
info:
  contact: {}
  description: This is a sample Server pets
  title: Swagger Example API
  version: 0.0.1
paths:
  /v1/base/uuid:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"Successfully obtained"}'
          schema:
            type: string
      summary: Obtain unique identification uuid
      tags:
      - Base
  /v2/api:
    post:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"Created successfully"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Create Foundationapi
      tags:
      - SysApi
  /v2/base/file:
    post:
      consumes:
      - multipart/form-data
      description: Upload files
      parameters:
      - description: file
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
      summary: Upload files
      tags:
      - Docker Base
  /v2/endpoint/one/test:
    post:
      consumes:
      - application/json
      description: Testing a Single Environment
      parameters:
      - description: 'environmental information '
        in: body
        name: object
        required: true
        schema:
          $ref: '#/definitions/docker.DocEndpoint'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/docker.DocEndpoint'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Testing a Single Environment
      tags:
      - docker
  /v2/endpoint/test:
    post:
      consumes:
      - application/json
      description: Testing the environment for local storage
      parameters:
      - description: environmental information
        in: body
        name: object
        required: true
        schema:
          $ref: '#/definitions/docker.DocEndpoint'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/docker.DocEndpoint'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Testing the environment for local storage
      tags:
      - docker
  /v2/kubernetes/pod/log:
    get:
      consumes:
      - application/json
      description: k8sPodjournal
      parameters:
      - description: namespace
        in: query
        name: namespace
        type: string
      - description: podName
        in: query
        name: podName
        type: string
      - description: containerName
        in: query
        name: containerName
        type: string
      - description: tailLines
        in: query
        name: tailLines
        type: string
      produces:
      - application/json
      responses: {}
      summary: k8sPodjournal
      tags:
      - kubernetes
  /v2/kubernetes/pod/terminal:
    get:
      consumes:
      - application/json
      description: k8sPodterminal
      parameters:
      - description: namespace
        in: query
        name: namespace
        type: string
      - description: podName
        in: query
        name: podName
        type: string
      - description: containerName
        in: query
        name: containerName
        type: string
      produces:
      - application/json
      responses: {}
      summary: k8sPodterminal
      tags:
      - kubernetes
  /v2/kubernetes/pods:
    get:
      consumes:
      - application/json
      description: obtaink8sPodobtain
      parameters:
      - description: namespace
        in: query
        name: namespace
        type: string
      produces:
      - application/json
      responses: {}
      summary: obtaink8sPodobtain
      tags:
      - kubernetes
  /v2/software:
    delete:
      consumes:
      - application/json
      parameters:
      - description: parameter
        in: body
        name: object
        required: true
        schema:
          $ref: '#/definitions/request.DelSoftwareReq'
      produces:
      - application/json
      responses:
        "200":
          description: '{"code":0,"data":{},"msg":"Successfully deleted"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Remove softwareApi
      tags:
      - SoftwareApi
    post:
      consumes:
      - application/json
      parameters:
      - description: parameter
        in: body
        name: object
        required: true
        schema:
          $ref: '#/definitions/docker.DocSoftware'
      produces:
      - application/json
      responses:
        "200":
          description: '{"code":0,"data":{},"msg":"Created successfully"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Create softwareApi
      tags:
      - SoftwareApi
  /v2/software/start:
    post:
      consumes:
      - application/json
      parameters:
      - description: parameter
        in: body
        name: object
        required: true
        schema:
          $ref: '#/definitions/request.StartSoftwareRequest'
      produces:
      - application/json
      responses:
        "200":
          description: '{"code":0,"data":{},"msg":"Successfully started"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: executeApi
      tags:
      - SoftwareApi
  /v2/software/stop:
    post:
      consumes:
      - application/json
      parameters:
      - description: parameter
        in: body
        name: object
        required: true
        schema:
          $ref: '#/definitions/request.StopSoftwareRequest'
      produces:
      - application/json
      responses:
        "200":
          description: '{"code":0,"data":{},"msg":"Stopped successfully"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Stop softwareApi
      tags:
      - SoftwareApi
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: x-token
    type: apiKey
swagger: "2.0"
